[
  {
    "objectID": "hello-penguins.html",
    "href": "hello-penguins.html",
    "title": "Hello, Penguins!",
    "section": "",
    "text": "Meet the Palmer Penguins!!\n\n\nFor this analysis we’ll use a few packages for visualization and data display.\n\nimport pandas as pd\nimport seaborn as sns \nfrom IPython.display import Markdown\n\nsns.set_style('whitegrid')\n\n\n\n\nThe dataset we’ll use comes from the palmerpenguins package.\n\nfrom palmerpenguins import load_penguins\n\npenguins = load_penguins()\n\nThis dataset contains size measurements, clutch observations, and blood isotope ratios for 344 adult foraging Adélie, Chinstrap, and Gentoo penguins observed on islands in the Palmer Archipelago near Palmer Station, Antarctica.\nLet’s take a peek at the data. The table below shows the first five rows of the penguins data frame.\n\nMarkdown(penguins.head().to_markdown(index=False))\n\n\n\nTable 1: First five rows of the penguins data frame.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\nAdelie\nTorgersen\n39.1\n18.7\n181\n3750\nmale\n2007\n\n\nAdelie\nTorgersen\n39.5\n17.4\n186\n3800\nfemale\n2007\n\n\nAdelie\nTorgersen\n40.3\n18\n195\n3250\nfemale\n2007\n\n\nAdelie\nTorgersen\nnan\nnan\nnan\nnan\nnan\n2007\n\n\nAdelie\nTorgersen\n36.7\n19.3\n193\n3450\nfemale\n2007"
  },
  {
    "objectID": "hello-penguins.html#packages",
    "href": "hello-penguins.html#packages",
    "title": "Hello, Penguins!",
    "section": "",
    "text": "For this analysis we’ll use a few packages for visualization and data display.\n\nimport pandas as pd\nimport seaborn as sns \nfrom IPython.display import Markdown\n\nsns.set_style('whitegrid')"
  },
  {
    "objectID": "hello-penguins.html#data",
    "href": "hello-penguins.html#data",
    "title": "Hello, Penguins!",
    "section": "",
    "text": "The dataset we’ll use comes from the palmerpenguins package.\n\nfrom palmerpenguins import load_penguins\n\npenguins = load_penguins()\n\nThis dataset contains size measurements, clutch observations, and blood isotope ratios for 344 adult foraging Adélie, Chinstrap, and Gentoo penguins observed on islands in the Palmer Archipelago near Palmer Station, Antarctica.\nLet’s take a peek at the data. The table below shows the first five rows of the penguins data frame.\n\nMarkdown(penguins.head().to_markdown(index=False))\n\n\n\nTable 1: First five rows of the penguins data frame.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\nAdelie\nTorgersen\n39.1\n18.7\n181\n3750\nmale\n2007\n\n\nAdelie\nTorgersen\n39.5\n17.4\n186\n3800\nfemale\n2007\n\n\nAdelie\nTorgersen\n40.3\n18\n195\n3250\nfemale\n2007\n\n\nAdelie\nTorgersen\nnan\nnan\nnan\nnan\nnan\n2007\n\n\nAdelie\nTorgersen\n36.7\n19.3\n193\n3450\nfemale\n2007"
  },
  {
    "objectID": "hello-penguins.html#body-mass-vs.-flipper-length",
    "href": "hello-penguins.html#body-mass-vs.-flipper-length",
    "title": "Hello, Penguins!",
    "section": "Body mass vs. flipper length",
    "text": "Body mass vs. flipper length\nThe figure below the relationship between body mass and flipper length of penguins.\n\n# from https://github.com/mcnakhaee/palmerpenguins\ng = sns.lmplot(x=\"flipper_length_mm\",\n               y=\"body_mass_g\",\n               hue=\"species\",\n               height=7,\n               data=penguins,\n               palette=['#FF8C00','#159090','#A034F0'])\ng.set_xlabels('Flipper Length')\ng.set_ylabels('Body Mass')\n\n\n\n\n\n\n\nFigure 1: Body mass vs. flipper length of penguins"
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Data Analysis Portfolio",
    "section": "Introduction",
    "text": "Introduction\nThe impact of COVID-19 has been profound across industries, and the entertainment field is no exception. As someone with a long-standing interest in movies and a curiosity about Netflix’s business strategy, I was particularly intrigued by how the streaming giant adapted its content library in response to the pandemic.\nThis project is an effort to explore the changes in Netflix’s movie catalog by comparing data from the pre-COVID and post-COVID periods.\nRefer to the data preparation notebook for the data preparation part for the project.\nRefer to the analysis and visualizations notebook for the detailed analysis and visualizations part for the project."
  },
  {
    "objectID": "index.html#introduction-1",
    "href": "index.html#introduction-1",
    "title": "Data Analysis Portfolio",
    "section": "Introduction",
    "text": "Introduction\nCyclistic, a bike-share company, seeks to understand how annual members and casual riders use its service. This case study explores usage patterns, preferences, and behavioral differences to inform targeted marketing and operational strategies.\nThe primary question addressed is: How do annual members and casual riders use Cyclistic bikes differently?\nUsing visualizations, I uncover key trends in ride frequency, duration, and time-based usage, with detailed explanations and insights accompanying each analysis.\n\nAttached Case Study Report\nRefer to the attached case study notebook for a detailed analysis.\nRefer to the attached problem statement for better understanding of the problem statement for the case study."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Data Preparation",
    "section": "",
    "text": "Data Preparation:\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Analysis_v03.html",
    "href": "posts/Analysis_v03.html",
    "title": "Case study: How does a bike-share navigate speedy success?",
    "section": "",
    "text": "Cyclistic, a bike-share company, aims to understand how different types of users—annual members and casual riders—use their service. This analysis focuses on identifying usage patterns, preferences, and behavioral differences between these two groups. By using the provided dataset, we can uncover actionable insights that support targeted marketing and operational strategies to optimize Cyclistic’s services.\nThe primary question this case study seeks to address is: How do annual members and casual riders use Cyclistic bikes differently?\nThe other two questions are: Why would casual riders buy Cyclistic annual memberships? How can Cyclistic use digital media to influence casual riders to become members?\nUsing visualizations, we analyze key trends such as ride frequency, duration, and time-based usage patterns. Each visualization is accompanied by an explanation of its purpose and refined observations derived from the analysis."
  },
  {
    "objectID": "posts/Analysis_v03.html#introduction",
    "href": "posts/Analysis_v03.html#introduction",
    "title": "Case study: How does a bike-share navigate speedy success?",
    "section": "",
    "text": "Cyclistic, a bike-share company, aims to understand how different types of users—annual members and casual riders—use their service. This analysis focuses on identifying usage patterns, preferences, and behavioral differences between these two groups. By using the provided dataset, we can uncover actionable insights that support targeted marketing and operational strategies to optimize Cyclistic’s services.\nThe primary question this case study seeks to address is: How do annual members and casual riders use Cyclistic bikes differently?\nThe other two questions are: Why would casual riders buy Cyclistic annual memberships? How can Cyclistic use digital media to influence casual riders to become members?\nUsing visualizations, we analyze key trends such as ride frequency, duration, and time-based usage patterns. Each visualization is accompanied by an explanation of its purpose and refined observations derived from the analysis."
  },
  {
    "objectID": "posts/Analysis_v03.html#data-preparation",
    "href": "posts/Analysis_v03.html#data-preparation",
    "title": "Case study: How does a bike-share navigate speedy success?",
    "section": "Data Preparation",
    "text": "Data Preparation\nTo begin the analysis, the first step involved loading the combined dataset containing ride data for a full year. The dataset was prepared by merging monthly ride data files into a single comprehensive file, ensuring all records were consolidated for analysis. This file, named combined_data.csv, was then loaded into a pandas DataFrame for further exploration and processing. Dataset source: https://divvy-tripdata.s3.amazonaws.com/index.html\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Load the combined data\nfile_path = '/Users/aravindsankars/Documents/Case_Study_Cycles/dataset_prepare/combined_data.csv'\ndf = pd.read_csv(file_path)\n\nprint(df.head())\nprint(f\"Combined dataset has {df.shape[0]} rows and {df.shape[1]} columns.\")\n\n            ride_id  rideable_type           started_at             ended_at  \\\n0  743252713F32516B   classic_bike  2024-04-22 19:08:21  2024-04-22 19:12:56   \n1  BE90D33D2240C614  electric_bike  2024-04-11 06:19:24  2024-04-11 06:22:21   \n2  D47BBDDE7C40DD61   classic_bike  2024-04-20 11:13:13  2024-04-20 11:29:31   \n3  6684E760BF9EA9B5   classic_bike  2024-04-04 18:39:20  2024-04-04 18:43:06   \n4  CA9EFC0D24C24A27  electric_bike  2024-04-19 19:30:20  2024-04-19 20:07:42   \n\n           start_station_name start_station_id  \\\n0  Aberdeen St & Jackson Blvd            13157   \n1  Aberdeen St & Jackson Blvd            13157   \n2  Sheridan Rd & Montrose Ave     TA1307000107   \n3  Aberdeen St & Jackson Blvd            13157   \n4  Sheridan Rd & Montrose Ave     TA1307000107   \n\n                 end_station_name end_station_id  start_lat  start_lng  \\\n0    Desplaines St & Jackson Blvd          15539  41.877726 -87.654787   \n1    Desplaines St & Jackson Blvd          15539  41.877722 -87.654959   \n2  Ashland Ave & Belle Plaine Ave          13249  41.961670 -87.654640   \n3    Desplaines St & Jackson Blvd          15539  41.877726 -87.654787   \n4    Stetson Ave & South Water St   TA1308000029  41.961613 -87.654615   \n\n     end_lat    end_lng member_casual  \n0  41.878119 -87.643948        member  \n1  41.878119 -87.643948        member  \n2  41.956057 -87.668835        member  \n3  41.878119 -87.643948        member  \n4  41.886835 -87.622320        member  \nCombined dataset has 5860568 rows and 13 columns."
  },
  {
    "objectID": "posts/Analysis_v03.html#data-cleaning-and-feature-engineering",
    "href": "posts/Analysis_v03.html#data-cleaning-and-feature-engineering",
    "title": "Case study: How does a bike-share navigate speedy success?",
    "section": "Data Cleaning and Feature Engineering",
    "text": "Data Cleaning and Feature Engineering\nThe next step in the analysis involved cleaning the dataset and engineering new features to derive meaningful insights.\n\nCleaning the DateTime Columns\nRemove Extra Characters: The started_at and ended_at columns were converted to datetime format using pd.to_datetime. Extra characters (e.g., fractions of a second) were removed to ensure consistency.\n\n# Clean and convert the datetime columns\ndf['started_at'] = pd.to_datetime(df['started_at'].str.split('.').str[0], errors='coerce')  # Remove extra characters\ndf['ended_at'] = pd.to_datetime(df['ended_at'].str.split('.').str[0], errors='coerce')  # Remove extra characters\n\nHandle Missing or Invalid Values: Rows with missing or invalid values in the started_at or ended_at columns were dropped to maintain data integrity.\n\n# Drop rows with invalid or missing datetime values\ndf = df.dropna(subset=['started_at', 'ended_at'])\n\n\n\nFeature Engineering\nRide Length: The duration of each ride was calculated in minutes and stored in a new column, ride_length.\nDay of the Week: The day of the week for each ride’s start time was extracted and added as the day_of_week column.\nHour of the Day: The hour when each ride started was extracted to analyze hourly trends. This was stored in the hour_of_day column.\n\n# Add derived columns\ndf['ride_length'] = (df['ended_at'] - df['started_at']).dt.total_seconds() / 60  # Ride length in minutes\ndf['day_of_week'] = df['started_at'].dt.day_name()  # Day of the week\ndf['hour_of_day'] = df['started_at'].dt.hour  # Hour of the day\n\n\n\nSummary Table Creation\nGrouping and Aggregation: The data was grouped by member_casual, day_of_week, and hour_of_day to calculate metrics such as ride count and average ride length.\nDay Ordering: The day_of_week column was ordered to reflect the natural sequence of days from Sunday to Saturday.\n\n# Summary grouping by member/casual, day of week, and hour of day\ndf_summary = df.groupby(['member_casual', 'day_of_week', 'hour_of_day'], as_index=False).agg(\n    ride_count=('ride_id', 'count'),\n    avg_ride_length=('ride_length', 'mean')\n)\n\n# Order days of the week\nday_order = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\ndf_summary['day_of_week'] = pd.Categorical(df_summary['day_of_week'], categories=day_order, ordered=True)\n\n# Aggregate data to include total rides, average ride length, most common day, and most common hour\nrider_comparison = df.groupby('member_casual').agg(\n    total_rides=('ride_id', 'count'),\n    avg_ride_length=('ride_length', 'mean'),\n    most_common_day=('day_of_week', lambda x: x.mode()[0] if not x.mode().empty else None),\n    most_common_hour=('hour_of_day', lambda x: x.mode()[0] if not x.mode().empty else None)\n).reset_index()\n\n\n\nRider Comparison Table\nA high-level comparison between casual riders and members was created, summarizing:\n\nTotal Rides: Number of rides taken by each group.\nAverage Ride Length: Average duration of rides in minutes.\nMost Common Day: The day of the week with the highest number of rides.\nMost Common Hour: The hour of the day with the highest number of rides.\n\n\n# Display the table\nrider_comparison\n\n\n\n\n\n\n\n\nmember_casual\ntotal_rides\navg_ride_length\nmost_common_day\nmost_common_hour\n\n\n\n\n0\ncasual\n2151658\n25.150669\nSaturday\n17\n\n\n1\nmember\n3708910\n12.770208\nWednesday\n17\n\n\n\n\n\n\n\n\n\nInsights\nCasual Riders: - Have significantly longer ride lengths, likely indicating recreational usage. - Prefer weekends (especially Saturday) and late afternoon hours (5 PM).\nMembers: - Take shorter rides, aligning with regular commuting patterns. - Show higher activity during weekdays (especially Wednesday) at peak commuting times (5 PM).\nLets dive deeper and find out what differentiates the two groups of riders.\nTo maintain consistency in visualizations throughout the analysis, a uniform color palette is defined at the outset.\n\n# Define a color palette for casual and member groups\ncolors = {'casual': '#e73924', 'member': '#1f77b4'}"
  },
  {
    "objectID": "posts/Analysis_v03.html#visualization",
    "href": "posts/Analysis_v03.html#visualization",
    "title": "Case study: How does a bike-share navigate speedy success?",
    "section": "Visualization",
    "text": "Visualization\nTo gain actionable insights into the behavior and preferences of Cyclistic’s casual and member riders, we employ a series of targeted visualizations. These plots not only uncover patterns in ridership but also highlight key differences between the two groups. These visualizations collectively address the primary question: How do annual members and casual riders use Cyclistic bikes differently?\n\n1. Bar Chart: Total rides by day of the week\nThis plot provides an overview of ride activity across the week, highlighting peak days for both casual and member riders. It helps identify whether weekends or weekdays see higher ridership and how these patterns differ between the groups.\n\nplt.figure(figsize=(12, 6))\nbar_data = df.groupby(['day_of_week', 'member_casual'])['ride_id'].count().reset_index()\nbar_data_pivot = bar_data.pivot(index='day_of_week', columns='member_casual', values='ride_id').reindex(day_order)\nbar_data_pivot.plot(kind='bar', figsize=(12, 6), color=['#e73924', '#1f77b4'], width=0.7)\n#1f77b4 #ff7f0e \nplt.title('Total Rides by Day of the Week')\nplt.xlabel('Day of Week')\nplt.ylabel('Ride Count')\nplt.xticks(rotation=45)\nplt.legend(title='Rider Type')\nplt.tight_layout()\nplt.show()\n\n&lt;Figure size 1200x600 with 0 Axes&gt;\n\n\n\n\n\n\n\n\n\nWe can see that the ride counts are much higher for members than casuals with most of the rides happening during weekdays but evenly distributed for casuals on all days except on weekends where there is an increase.\n\nMembers exhibit higher ride counts on weekdays, with a clear drop during weekends\nCasual riders maintain a relatively steady ride count across the week, with significant increases on weekends\n\nThis pattern enforces the idea that members primarily use bikes for work-related purposes, while casual riders use them for leisure activities.\n\n\n2. Heatmap: Rides by hour of day vs. day of week\nThe heatmap visualizes ride activity over the course of the week and by hour of the day. This allows us to pinpoint peak usage times for casual and member riders, revealing patterns such as morning and evening commuting hours for members or recreational afternoon rides for casual riders.\n\nplt.figure(figsize=(14, 6))\nheatmap_data = df_summary.pivot_table(\n    index='hour_of_day', columns='day_of_week', values='ride_count', aggfunc='sum', observed=False\n)\nsns.heatmap(heatmap_data, cmap='coolwarm', annot=False)\nplt.title('Heatmap: Rides by Hour of Day vs. Day of Week')\nplt.xlabel('Day of Week')\nplt.ylabel('Hour of Day')\nplt.show()\n\n\n\n\n\n\n\n\nAs seen clearly in the heatmap, most rides happen on weekdays between 7-9AM and 3-7PM. We can safely assume that these are office timings and most of the customers use the cycles as commute to work. Additionally, on friday mornings, there are less rides while there are more in the evening. The peak hour is 3:30-5:30 pm on Mondays.\n\nMost rides occur during weekdays between 7-9 AM and 3-7 PM, aligning with commuting hours\nFriday mornings show reduced ride activity, with an increase in the evening andthrough weekend, potentially due to casual social outings\nThe highest peak is observed on Monday evenings (3:30–5:30 PM)\n\nThe number of rides of members and casuals differ and a lot as we have seen from the above rider_comparison table and from the bar plot. Hence, I might be able to get more insights if I analyze the casual riders and members differently.\n\nRides by hour of day vs. day of week for each group of members\nBreaking down the heatmap by rider type allows us to uncover specific behavioral differences between casual riders and members.\n\n# Generate heatmaps for casual and member riders\ndef generate_heatmap_by_rider_type(df_summary, rider_type, title_suffix):\n    # Filter data for the specific rider type\n    df_filtered = df_summary[df_summary['member_casual'] == rider_type]\n    \n    # Pivot the data to create a heatmap-friendly format\n    heatmap_data = df_filtered.pivot_table(\n        index='hour_of_day', \n        columns='day_of_week', \n        values='ride_count', \n        aggfunc='sum', \n        observed=False\n    )\n    \n    # Create the heatmap\n    plt.figure(figsize=(14, 6))\n    sns.heatmap(heatmap_data, cmap='coolwarm', annot=False, cbar=True)\n    plt.title(f'Heatmap: Rides by Hour of Day vs. Day of Week ({rider_type.capitalize()} Riders - {title_suffix})')\n    plt.xlabel('Day of Week')\n    plt.ylabel('Hour of Day')\n    plt.show()\n\n# Generate heatmaps for casual and member riders\ngenerate_heatmap_by_rider_type(df_summary, rider_type='casual', title_suffix='All Data')\ngenerate_heatmap_by_rider_type(df_summary, rider_type='member', title_suffix='All Data')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhen we analyze casual and members differently, we can see that members mostly use the cycles for office purposes(mornings and evenings on weekdays). Most number of casuals ride in the weekend(Saturday and Sunday) especially on Saturdays from 12PM to 5PM.\n\nMembers: Predominantly ride during weekday mornings and evenings, indicating usage for commuting.\nCasual Riders: Primarily ride during weekends, with peak activity on Saturdays (12 PM–5 PM), suggesting recreational or leisure use.\n\n\n\n\n3. Line Chart: Trends in total rides by hour of the day\nBy plotting the total number of rides for each hour of the day, we capture the daily ridership trends. This visualization helps to compare hourly usage patterns and highlights how casual and member riders utilize the service at different times of the day.\n\nplt.figure(figsize=(12, 6))\nline_data = df.groupby(['hour_of_day', 'member_casual'])['ride_id'].count().reset_index()\nsns.lineplot(data=line_data, x='hour_of_day', y='ride_id', hue='member_casual', marker='o', palette='Set1')\nplt.title('Trends in Total Rides by Hour of the Day')\nplt.xlabel('Hour of Day')\nplt.ylabel('Ride Count')\nplt.xticks(range(0, 24))\nplt.legend(title='Rider Type')\nplt.show()\n\n\n\n\n\n\n\n\n\nMembers show distinct peaks during morning and evening hours, reinforcing commuting patterns.\nCasual riders have a single gradual peak in the afternoon, which correlates with recreational activity.\n\n\n\n4. Box Plot: Compare ride lengths for casuals vs. members\nA box plot is used to explore the distribution of ride lengths for each rider type. It shows differences in ride duration and variability, illustrating that casual riders often have longer and more varied ride times compared to the consistent patterns of members.\nCleaning ride_length column\nSteps: - Check for and handle NaN values in the ride_length column. - Find maximum and minimum ride lengths in the dataset. - Ensure that ride_length is in a numeric format (e.g., float or integer). If it’s stored as a string, convert it to a numeric type. - Remove rides shorter than 1 minute and Cap the maximum ride length(removing outliers).\n\n# Find the maximum and minimum ride lengths\nmax_ride_length = df['ride_length'].max()\nmin_ride_length = df['ride_length'].min()\n\nprint(f\"Maximum Ride Length: {max_ride_length} minutes\")\nprint(f\"Minimum Ride Length: {min_ride_length} minutes\")\n\nMaximum Ride Length: 60.0 minutes\nMinimum Ride Length: 1.0 minutes\n\n\n\n# Check for null values\nprint(df['ride_length'].isnull().sum())\n\n# Drop rows with NaN in ride_length\ndf = df.dropna(subset=['ride_length'])\n\n# Convert ride_length to numeric (e.g., if stored as strings)\ndf['ride_length'] = pd.to_numeric(df['ride_length'], errors='coerce')\n\n# Filter out invalid ride lengths\ndf = df[(df['ride_length'] &gt;= 1) & (df['ride_length'] &lt;= 70)]\n\n0\n\n\n\nplt.figure(figsize=(10, 6))\nsns.boxplot(data=df, x='member_casual', y='ride_length', hue='member_casual', palette=colors, legend=False)\nplt.title('Ride Length Distribution by Rider Type')\nplt.xlabel('Rider Type')\nplt.ylabel('Ride Length (minutes)')\nplt.ylim(0, 70)\nplt.show()\n\n\n\n\n\n\n\n\nFrom this plot we can see that, casuals ride for more duration than members. There is more variability in ride lengths for casuals. The median of casuals is above 20 minutes and member is below 10 minutes.\n\nCasual Riders: Tend to take longer rides with greater variability and many outliers. Likely use the service for leisure or recreation.\nMember Riders: Have shorter and more consistent ride lengths. Primarily use the service for regular, utilitarian travel like commuting.\n\nCasual riders tend to have significantly longer ride durations, with a median above 20 minutes, and show greater variability with numerous outliers. Members have shorter and more consistent ride lengths, with a median below 10 minutes.\nThese differences align with the hypothesis that casual riders prioritize recreational trips, while members focus on efficiency.\n\n\n5. Bar Plot: Ride length vs. hour of the day\nThis plot delves into the relationship between ride length and the hour of the day, segmented by rider type. It uncovers trends such as casual riders taking longer rides during non-peak hours, while members generally have shorter, consistent ride lengths.\n\nplt.figure(figsize=(12, 6))\n\n# Plot a bar graph for average ride length by hour of day, grouped by rider type\nsns.barplot(\n    data=df,\n    x='hour_of_day',\n    y='ride_length',\n    hue='member_casual',\n    errorbar=None,\n    palette='Set1'\n)\n\n# Add titles and labels\nplt.title('Average Ride Length vs. Hour of the Day', fontsize=16)\nplt.xlabel('Hour of Day', fontsize=14)\nplt.ylabel('Average Ride Length (minutes)', fontsize=14)\nplt.legend(title='Rider Type')\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\n\n# Show the plot\nplt.show()\n\n\n\n\n\n\n\n\nCasual riders consistently have longer ride durations throughout the day, with peaks in the afternoon and evening hours.\nMembers maintain relatively stable ride lengths, suggesting consistent usage patterns.\nThere is a dip in the duration in the late night and early morning hours for casual members. The early morning casuals have the lowest ride lengths and this suggests that these casuals might be using it for commute purposes like going to their gym in the early morning. These people have the most probability of converting to annual members.\n\n\nBucketize based on time of day\nCategorize rides into time periods (Morning, Afternoon, Evening, Night) to analyze patterns in conjunction with rider type and day of the week.\n\nCategorized hours of the day into four time buckets.\nGrouped data by member_casual, day_of_week, and time_of_day.\nCreated heatmaps to visualize:\n\nTotal rides per time of day and day of week.\nAverage ride length per time of day and day of week.\n\n\n\n# Define hour categories\ndef categorize_hour(hour):\n    if 5 &lt;= hour &lt; 12:\n        return 'Morning'\n    elif 12 &lt;= hour &lt; 17:\n        return 'Afternoon'\n    elif 17 &lt;= hour &lt; 21:\n        return 'Evening'\n    else:\n        return 'Night'\n\n# Add a new column for time categories\ndf['time_of_day'] = df['hour_of_day'].apply(categorize_hour)\n\n# Set the order for time_of_day\ntime_order = ['Morning', 'Afternoon', 'Evening', 'Night']\ndf['time_of_day'] = pd.Categorical(df['time_of_day'], categories=time_order, ordered=True)\n\n# Analyze by time of day, day of the week, and rider type\ntime_analysis = df.groupby(['member_casual', 'day_of_week', 'time_of_day'], observed=False).agg(\n    total_rides=('ride_id', 'count'),\n    avg_ride_length=('ride_length', 'mean')\n).reset_index()\n\n# Order the day_of_week column\nday_order = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\ntime_analysis['day_of_week'] = pd.Categorical(time_analysis['day_of_week'], categories=day_order, ordered=True)\n\n# Sort the results for better readability\ntime_analysis.sort_values(by=['member_casual', 'day_of_week', 'time_of_day'], inplace=True)\n\n\nTotal Rides Heatmap\nThe heatmaps for total rides provide a detailed view of ride activity patterns for casual and member riders based on the time of day and day of the week.\n\n# Create a heatmap to visualize total rides by day of week and time of day for each rider type\nfor rider_type in ['casual', 'member']:\n    heatmap_data = time_analysis[time_analysis['member_casual'] == rider_type].pivot(\n        index='time_of_day', columns='day_of_week', values='total_rides'\n    )\n    plt.figure(figsize=(10, 6))\n    sns.heatmap(heatmap_data, annot=True, fmt='.0f', cmap='coolwarm', cbar=True)\n    plt.title(f'Total Rides Heatmap ({rider_type.capitalize()} Riders)')\n    plt.xlabel('Day of Week')\n    plt.ylabel('Time of Day')\n    plt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAverage Ride Length Heatmap\nThe heatmaps for average ride length reveal additional insights into the nature of trips for each rider type.\n\n# Create a heatmap to visualize average ride length by day of week and time of day for each rider type\nfor rider_type in ['casual', 'member']:\n    heatmap_data = time_analysis[time_analysis['member_casual'] == rider_type].pivot(\n        index='time_of_day', columns='day_of_week', values='avg_ride_length'\n    )\n    plt.figure(figsize=(10, 6))\n    sns.heatmap(heatmap_data, annot=True, fmt='.1f', cmap='coolwarm', cbar=True)\n    plt.title(f'Average Ride Length Heatmap ({rider_type.capitalize()} Riders)')\n    plt.xlabel('Day of Week')\n    plt.ylabel('Time of Day')\n    plt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservations:\nCasual Riders: - Prefer afternoons and evenings, especially on weekends. - Tend to have longer average ride lengths during non-peak hours, aligning with recreational usage.\nMember Riders: - High activity during mornings and evenings on weekdays, consistent with commute times. - Show shorter, more efficient rides compared to casual riders.\nNow, lets uncover seasonal usage trends and compare how casual and member riders adapt their riding habits throughout the year.\n\n\n\nMonthly Analysis: Seasonal Trends in Ridership and Ride Length\nTo better understand how seasonal changes influence rider behavior, we analyzed ridership trends and ride lengths across the months, focusing on differences between casual and member riders.\nData Preparation: - Extracted the month from the ride start times and arranged them chronologically for clear visualization. - Grouped the data by rider type (member_casual) and month to calculate total rides and average ride lengths.\nVisualizations: - A bar plot was created to showcase the total rides per month, highlighting seasonal fluctuations in ridership patterns for casual and member riders. - Another bar plot was used to display the average ride length per month, providing insights into how trip durations vary with the seasons for each rider type.\n\n# Extract month from the started_at column\ndf['month'] = df['started_at'].dt.month_name()\n\n# Order months chronologically for better visualization\nmonth_order = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n]\n\n# Group by rider type and month to calculate total rides and average ride length\nmonthly_summary = df.groupby(['member_casual', 'month']).agg(\n    total_rides=('ride_id', 'count'),\n    avg_ride_length=('ride_length', 'mean')\n).reset_index()\n\n# Ensure months are ordered correctly\nmonthly_summary['month'] = pd.Categorical(monthly_summary['month'], categories=month_order, ordered=True)\nmonthly_summary = monthly_summary.sort_values('month')\n\n# Plot total rides per month\nplt.figure(figsize=(14, 7))\nsns.barplot(\n    data=monthly_summary,\n    x='month',\n    y='total_rides',\n    hue='member_casual',\n    palette='Set1'\n)\nplt.title('Total Rides Per Month: Casual vs Member Riders', fontsize=16)\nplt.xlabel('Month', fontsize=14)\nplt.ylabel('Total Rides', fontsize=14)\nplt.xticks(rotation=45, fontsize=12)\nplt.yticks(fontsize=12)\nplt.legend(title='Rider Type', fontsize=12)\nplt.show()\n\n# Plot average ride length per month\nplt.figure(figsize=(14, 7))\nsns.barplot(\n    data=monthly_summary,\n    x='month',\n    y='avg_ride_length',\n    hue='member_casual',\n    palette='Set1'\n)\nplt.title('Average Ride Length Per Month: Casual vs Member Riders', fontsize=16)\nplt.xlabel('Month', fontsize=14)\nplt.ylabel('Average Ride Length (minutes)', fontsize=14)\nplt.xticks(rotation=45, fontsize=12)\nplt.yticks(fontsize=12)\nplt.legend(title='Rider Type', fontsize=12)\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservations:\nCasual Riders: - Activity peaks during summer months (June–August), reflecting seasonal leisure usage. - Ride lengths are generally longer, showing variability based on weather and events.\nMember Riders: - Maintain steady activity throughout the year, indicating consistent commuting patterns. - Ride lengths are shorter and more uniform, emphasizing efficiency and purpose."
  },
  {
    "objectID": "posts/Analysis_v03.html#final-observations",
    "href": "posts/Analysis_v03.html#final-observations",
    "title": "Case study: How does a bike-share navigate speedy success?",
    "section": "Final Observations:",
    "text": "Final Observations:\n1. Time-of-Day Analysis - Casual riders prefer afternoons and evenings, with weekends (Saturday and Sunday) showing the highest activity. - Member ridership peaks in the mornings and evenings on weekdays, consistent with typical work commute patterns. The heatmaps highlight that both rider types have distinct preferences in terms of time of day and day of the week.\n2. Ride Length Distribution - Casual riders generally have longer ride lengths compared to members, with many rides exceeding 30 minutes. - Member riders have shorter, more uniform ride durations, aligning with routine travel needs. The ride length distribution indicates casual riders utilize the service more for recreation, while members are focused on efficiency.\n3. Peak vs Non-Peak Hour Analysis - Casual riders dominate during non-peak hours, likely due to flexible schedules or recreational use. - Members primarily use the service during peak hours, indicating routine commuting. Average ride length during non-peak hours is significantly higher for casual riders, suggesting leisurely rides.\n4. Behavioral Analysis by Month - Casual riders exhibit higher variability in ride activity across the months, likely influenced by seasonal trends and leisure preferences. - Member riders show consistent ride activity throughout the year, reflecting regular commuting patterns. The bar plots reveal that summer months (June–August) are peak periods for casual riders, while member ridership remains steady.\n\nKey Insights:\nDifferentiated Usage Patterns\n\nCasual Riders:\nCasual riders primarily use Cyclistic bikes for recreational purposes during weekends, afternoons, and evenings. Their ride lengths are often longer, suggesting leisurely activities like sightseeing or social outings.\nNotable Exception: A subset of casual riders demonstrates behavior similar to members during early morning hours, with ride lengths matching those of members. This suggests short commutes, possibly to the gym or work.\n\n\nMembers:\nMembers exhibit consistent usage patterns aligned with workday commutes, peaking during weekday mornings and evenings. Their shorter and more uniform ride lengths reflect an emphasis on routine, efficiency, and reliability.\n\n\n\nOpportunities to Convert Casual Riders\n1. Target Casual Riders with Member-like Patterns\n\nCasual riders with behavior resembling members (e.g., short morning commutes) represent a promising segment for membership conversion.\nCyclistic could promote membership benefits to these riders, highlighting cost savings for frequent short trips and perks like priority access during peak hours.\n\n2. Seasonal Campaigns for Recreational Riders\n\nSince casual ridership spikes during summer months (June–August), targeted campaigns emphasizing unlimited rides and reduced costs for longer trips could appeal to recreational users.\n\n3. Highlight Convenience and Value\n\nMany casual riders may not realize the cost-effectiveness of annual memberships. Cyclistic can create digital media campaigns showcasing how frequent casual rides accumulate costs compared to a fixed annual fee.\n\n\n\nRecommendations for Digital Media Strategy\n1. Personalized Campaigns\n\nUse rider data analytics to identify casual riders with consistent usage patterns.\nSend personalized emails or app notifications emphasizing membership value, tailored to individual habits (e.g., “Ride more like a pro! Save on your weekly morning rides.”).\n\n2. Social Proof and Testimonials\n\nShare testimonials from current members who started as casual riders but found membership beneficial for daily routines or recreational activities.\n\n3. Promotions and Incentives\n\nOffer limited-time discounts or perks for casual riders to try memberships, particularly during the summer months.\nBundle memberships with additional perks (e.g., discounts at gyms, cafes, or attractions near high-activity zones).\n\n4. Engage Through Interactive Content\n\nUse social media platforms with engaging content like polls (“How much do you save as a Cyclistic member?”) and challenges (e.g., “Ride to 10 destinations this month as a member to win prizes!”)."
  },
  {
    "objectID": "posts/Analysis_v03.html#conclusion",
    "href": "posts/Analysis_v03.html#conclusion",
    "title": "Case study: How does a bike-share navigate speedy success?",
    "section": "Conclusion",
    "text": "Conclusion\nBy targeting casual riders who exhibit consistent behaviors similar to members, emphasizing the financial and convenience benefits of memberships, and creating tailored digital campaigns, Cyclistic can effectively convert casual riders into loyal annual members. Additionally, using data insights to address specific use cases, such as short commutes during mornings or recreational rides during summer, will strengthen engagement and drive membership growth."
  },
  {
    "objectID": "posts/TMDb_Netflix_Connect_Notebook_v01.html",
    "href": "posts/TMDb_Netflix_Connect_Notebook_v01.html",
    "title": "Data Preparation for TMDB and Netflix Titles",
    "section": "",
    "text": "This notebook processes datasets from Netflix and TMDB to identify matching titles, explore statistics, and generate cleaned outputs. Each step is documented to ensure clarity and reproducibility."
  },
  {
    "objectID": "posts/TMDb_Netflix_Connect_Notebook_v01.html#pre-covid-netflix-titles-with-tmdb",
    "href": "posts/TMDb_Netflix_Connect_Notebook_v01.html#pre-covid-netflix-titles-with-tmdb",
    "title": "Data Preparation for TMDB and Netflix Titles",
    "section": "Pre Covid Netflix titles with TMDB",
    "text": "Pre Covid Netflix titles with TMDB\n\n1. Loading and Inspecting Datasets\n\nimport pandas as pd\n\n# Load datasets\npre_netflix_df = pd.read_csv('netflix_titles_1.csv')\ntmdb_df = pd.read_csv('TMDB_movie_dataset_v11.csv')\npost_netflix_df = pd.read_csv('titles.csv')\n\n# Display dataset statistics\nprint('Netflix dataset shape:', pre_netflix_df.shape)\nprint('TMDB dataset shape:', tmdb_df.shape)\nprint('Netflix dataset shape:', post_netflix_df.shape)\n\n# Display a few rows from each dataset\npre_netflix_df.head(), tmdb_df.head(), post_netflix_df.head()\n\n\n\n2. Data Cleaning and Transformation\n\n# Standardize title case to lowercase for comparison\npre_netflix_df['title_lower'] = pre_netflix_df['title'].str.lower()\ntmdb_df['title_lower'] = tmdb_df['title'].str.lower()\npost_netflix_df['title_lower'] = post_netflix_df['title'].str.lower()\n\n# Drop duplicates in datasets\npre_netflix_df = pre_netflix_df.drop_duplicates(subset=['title_lower'])\ntmdb_df = tmdb_df.drop_duplicates(subset=['title_lower'])\npost_netflix_df = post_netflix_df.drop_duplicates(subset=['title_lower'])\nprint('Duplicates removed from datasets.')\n\n\n\n3. Merging Datasets\n\n# Merge datasets on standardized title\npre_merged_df = pd.merge(pre_netflix_df, tmdb_df, on='title_lower', how='inner')\n\n# Filter post-COVID titles (release year &gt;= 2020)\npost_merged_df = post_netflix_df[post_netflix_df['release_year'] &gt;= 2020]\npost_merged_df = pd.merge(post_netflix_df, tmdb_df, on='title_lower', how='inner')\n\n# Save pre merged dataset\npre_merged_df.to_csv('filtered_titles.csv', index=False)\n# Save post-COVID merged dataset\npost_merged_df.to_csv('post_matching_titles.csv', index=False)\n\nprint(f'Pre-COVID Merged dataset shape: {merged_df.shape}')\nprint(f'Post-COVID merged dataset shape: {merged_post_covid.shape}')\n\n\n\n5. Statistics and Identifying Common Titles\n\n# Load pre- and post-COVID datasets\nfiltered_df = pd.read_csv('filtered_titles.csv')\npost_matching_df = pd.read_csv('post_matching_titles.csv')\n\n# Find common titles between datasets\ncommon_titles = pd.merge(filtered_df, post_matching_df, on='title_lower', how='inner')\n\n# Save common and remaining titles\ncommon_titles.to_csv('common_titles.csv', index=False)\nfiltered_remaining = filtered_df[~filtered_df['title_lower'].isin(common_titles['title_lower'])]\npost_matching_remaining = post_matching_df[~post_matching_df['title_lower'].isin(common_titles['title_lower'])]\n\nfiltered_remaining.to_csv('filtered_remaining.csv', index=False)\npost_matching_remaining.to_csv('post_matching_remaining.csv', index=False)\n\nprint(f'Number of common titles: {common_titles.shape[0]}')\n\nIn this notebook, we successfully prepared and processed two datasets—Netflix and TMDB—to identify common movie titles and explore post-COVID trends. The key steps involved were:\nData Loading and Inspection: Reviewed and summarized the datasets, providing an overview of their structure and content. Data Cleaning and Transformation: Standardized titles, removed duplicates, and ensured consistency for reliable comparisons. Merging and Filtering: Merged datasets based on movie titles and applied filters to focus on specific timeframes, such as post-COVID releases. Analysis and Output: Generated key statistics, identified overlaps between datasets, and exported the cleaned and filtered datasets for further analysis. This process not only streamlined the data for easier use but also highlighted important patterns, such as trends in movie releases and shared titles between platforms."
  },
  {
    "objectID": "posts/TMDb_Netflix_Connect_Notebook.html",
    "href": "posts/TMDb_Netflix_Connect_Notebook.html",
    "title": "Data Preparation:",
    "section": "",
    "text": "To enrich the analysis, I incorporated data from the TMDB dataset, which provides extensive information about movies, such as genres, popularity, and release years. By connecting Netflix’s pre- and post-COVID datasets with TMDB, I aim to identify patterns, shifts, and trends in Netflix’s content strategy."
  },
  {
    "objectID": "posts/TMDb_Netflix_Connect_Notebook.html#data-preparation-for-tmdb-and-netflix-titles",
    "href": "posts/TMDb_Netflix_Connect_Notebook.html#data-preparation-for-tmdb-and-netflix-titles",
    "title": "Data Preparation:",
    "section": "Data Preparation for TMDB and Netflix Titles",
    "text": "Data Preparation for TMDB and Netflix Titles\nThis notebook processes datasets from Netflix and TMDB to identify matching titles, explore statistics, and generate cleaned outputs. Each step is documented to ensure clarity and reproducibility."
  },
  {
    "objectID": "posts/TMDb_Netflix_Connect_Notebook.html#pre-covid-netflix-titles-with-tmdb",
    "href": "posts/TMDb_Netflix_Connect_Notebook.html#pre-covid-netflix-titles-with-tmdb",
    "title": "Data Preparation:",
    "section": "Pre Covid Netflix titles with TMDB",
    "text": "Pre Covid Netflix titles with TMDB\n\n1. Loading and Inspecting Datasets\n\nimport pandas as pd\n\n# Load datasets\npre_netflix_df = pd.read_csv('PreCovid_titles.csv')\ntmdb_df = pd.read_csv('TMDB_movie_dataset_v11.csv')\npost_netflix_df = pd.read_csv('PostCovid_titles_May2022.csv')\n\nI have displayed the shapes and a few titles from each dataset below. First one is pre-COVID dataset.\n\nprint('Netflix Pre-COVID dataset shape:', pre_netflix_df.shape)\npre_netflix_df.head()\n\nNetflix Pre-COVID dataset shape: (6234, 12)\n\n\n\n\n\n\n\n\n\nshow_id\ntype\ntitle\ndirector\ncast\ncountry\ndate_added\nrelease_year\nrating\nduration\nlisted_in\ndescription\n\n\n\n\n0\n81145628\nMovie\nNorm of the North: King Sized Adventure\nRichard Finn, Tim Maltby\nAlan Marriott, Andrew Toth, Brian Dobson, Cole...\nUnited States, India, South Korea, China\nSeptember 9, 2019\n2019\nTV-PG\n90 min\nChildren & Family Movies, Comedies\nBefore planning an awesome wedding for his gra...\n\n\n1\n80117401\nMovie\nJandino: Whatever it Takes\nNaN\nJandino Asporaat\nUnited Kingdom\nSeptember 9, 2016\n2016\nTV-MA\n94 min\nStand-Up Comedy\nJandino Asporaat riffs on the challenges of ra...\n\n\n2\n70234439\nTV Show\nTransformers Prime\nNaN\nPeter Cullen, Sumalee Montano, Frank Welker, J...\nUnited States\nSeptember 8, 2018\n2013\nTV-Y7-FV\n1 Season\nKids' TV\nWith the help of three human allies, the Autob...\n\n\n3\n80058654\nTV Show\nTransformers: Robots in Disguise\nNaN\nWill Friedle, Darren Criss, Constance Zimmer, ...\nUnited States\nSeptember 8, 2018\n2016\nTV-Y7\n1 Season\nKids' TV\nWhen a prison ship crash unleashes hundreds of...\n\n\n4\n80125979\nMovie\n#realityhigh\nFernando Lebrija\nNesta Cooper, Kate Walsh, John Michael Higgins...\nUnited States\nSeptember 8, 2017\n2017\nTV-14\n99 min\nComedies\nWhen nerdy high schooler Dani finally attracts...\n\n\n\n\n\n\n\nNow, the TMDB dataset.\n\nprint('TMDB dataset shape:', tmdb_df.shape)\ntmdb_df.head()\n\nTMDB dataset shape: (1147541, 24)\n\n\n\n\n\n\n\n\n\nid\ntitle\nvote_average\nvote_count\nstatus\nrelease_date\nrevenue\nruntime\nadult\nbackdrop_path\n...\noriginal_title\noverview\npopularity\nposter_path\ntagline\ngenres\nproduction_companies\nproduction_countries\nspoken_languages\nkeywords\n\n\n\n\n0\n27205\nInception\n8.364\n34495\nReleased\n2010-07-15\n825532764\n148\nFalse\n/8ZTVqvKDQ8emSGUEMjsS4yHAwrp.jpg\n...\nInception\nCobb, a skilled thief who commits corporate es...\n83.952\n/oYuLEt3zVCKq57qu2F8dT7NIa6f.jpg\nYour mind is the scene of the crime.\nAction, Science Fiction, Adventure\nLegendary Pictures, Syncopy, Warner Bros. Pict...\nUnited Kingdom, United States of America\nEnglish, French, Japanese, Swahili\nrescue, mission, dream, airplane, paris, franc...\n\n\n1\n157336\nInterstellar\n8.417\n32571\nReleased\n2014-11-05\n701729206\n169\nFalse\n/pbrkL804c8yAv3zBZR4QPEafpAR.jpg\n...\nInterstellar\nThe adventures of a group of explorers who mak...\n140.241\n/gEU2QniE6E77NI6lCU6MxlNBvIx.jpg\nMankind was born on Earth. It was never meant ...\nAdventure, Drama, Science Fiction\nLegendary Pictures, Syncopy, Lynda Obst Produc...\nUnited Kingdom, United States of America\nEnglish\nrescue, future, spacecraft, race against time,...\n\n\n2\n155\nThe Dark Knight\n8.512\n30619\nReleased\n2008-07-16\n1004558444\n152\nFalse\n/nMKdUUepR0i5zn0y1T4CsSB5chy.jpg\n...\nThe Dark Knight\nBatman raises the stakes in his war on crime. ...\n130.643\n/qJ2tW6WMUDux911r6m7haRef0WH.jpg\nWelcome to a world without rules.\nDrama, Action, Crime, Thriller\nDC Comics, Legendary Pictures, Syncopy, Isobel...\nUnited Kingdom, United States of America\nEnglish, Mandarin\njoker, sadism, chaos, secret identity, crime f...\n\n\n3\n19995\nAvatar\n7.573\n29815\nReleased\n2009-12-15\n2923706026\n162\nFalse\n/vL5LR6WdxWPjLPFRLe133jXWsh5.jpg\n...\nAvatar\nIn the 22nd century, a paraplegic Marine is di...\n79.932\n/kyeqWdyUXW608qlYkRqosgbbJyK.jpg\nEnter the world of Pandora.\nAction, Adventure, Fantasy, Science Fiction\nDune Entertainment, Lightstorm Entertainment, ...\nUnited States of America, United Kingdom\nEnglish, Spanish\nfuture, society, culture clash, space travel, ...\n\n\n4\n24428\nThe Avengers\n7.710\n29166\nReleased\n2012-04-25\n1518815515\n143\nFalse\n/9BBTo63ANSmhC4e6r62OJFuK2GL.jpg\n...\nThe Avengers\nWhen an unexpected enemy emerges and threatens...\n98.082\n/RYMX2wcKCBAr24UyPD7xwmjaTn.jpg\nSome assembly required.\nScience Fiction, Action, Adventure\nMarvel Studios\nUnited States of America\nEnglish, Hindi, Russian\nnew york city, superhero, shield, based on com...\n\n\n\n\n5 rows × 24 columns\n\n\n\nFinally, the post-COVID dataset.\n\nprint('Netflix post-COVID dataset shape:', post_netflix_df.shape)\npost_netflix_df.head()\n\nNetflix post-COVID dataset shape: (5806, 15)\n\n\n\n\n\n\n\n\n\nid\ntitle\ntype\ndescription\nrelease_year\nage_certification\nruntime\ngenres\nproduction_countries\nseasons\nimdb_id\nimdb_score\nimdb_votes\ntmdb_popularity\ntmdb_score\n\n\n\n\n0\nts300399\nFive Came Back: The Reference Films\nSHOW\nThis collection includes 12 World War II-era p...\n1945\nTV-MA\n48\n['documentation']\n['US']\n1.0\nNaN\nNaN\nNaN\n0.600\nNaN\n\n\n1\ntm84618\nTaxi Driver\nMOVIE\nA mentally unstable Vietnam War veteran works ...\n1976\nR\n113\n['crime', 'drama']\n['US']\nNaN\ntt0075314\n8.3\n795222.0\n27.612\n8.2\n\n\n2\ntm127384\nMonty Python and the Holy Grail\nMOVIE\nKing Arthur, accompanied by his squire, recrui...\n1975\nPG\n91\n['comedy', 'fantasy']\n['GB']\nNaN\ntt0071853\n8.2\n530877.0\n18.216\n7.8\n\n\n3\ntm70993\nLife of Brian\nMOVIE\nBrian Cohen is an average young Jewish man, bu...\n1979\nR\n94\n['comedy']\n['GB']\nNaN\ntt0079470\n8.0\n392419.0\n17.505\n7.8\n\n\n4\ntm190788\nThe Exorcist\nMOVIE\n12-year-old Regan MacNeil begins to adapt an e...\n1973\nR\n133\n['horror']\n['US']\nNaN\ntt0070047\n8.1\n391942.0\n95.337\n7.7\n\n\n\n\n\n\n\n\n\n2. Data Cleaning and Transformation\nThe data cleaning and transformation steps for the source datasets are standardizing title case to lowercase and dropping duplicates in datasets.\nTitles in the datasets may have case differences (e.g., “Inception” vs. “inception”), which would otherwise be treated as distinct entries. Converting titles to lowercase standardizes them for consistent comparison and duplicate removal.\n\npre_netflix_df['title_lower'] = pre_netflix_df['title'].str.lower()\ntmdb_df['title_lower'] = tmdb_df['title'].str.lower()\npost_netflix_df['title_lower'] = post_netflix_df['title'].str.lower()\n\nDuplicate titles can distort analysis and inflate metrics. Removing duplicates ensures the data reflects unique entries, leading to cleaner and more accurate insights.\n\npre_netflix_df = pre_netflix_df.drop_duplicates(subset=['title_lower'])\nprint('Netflix Pre-COVID dataset shape:', pre_netflix_df.shape)\npre_netflix_df.head()\n\nNetflix Pre-COVID dataset shape: (6169, 13)\n\n\n\n\n\n\n\n\n\nshow_id\ntype\ntitle\ndirector\ncast\ncountry\ndate_added\nrelease_year\nrating\nduration\nlisted_in\ndescription\ntitle_lower\n\n\n\n\n0\n81145628\nMovie\nNorm of the North: King Sized Adventure\nRichard Finn, Tim Maltby\nAlan Marriott, Andrew Toth, Brian Dobson, Cole...\nUnited States, India, South Korea, China\nSeptember 9, 2019\n2019\nTV-PG\n90 min\nChildren & Family Movies, Comedies\nBefore planning an awesome wedding for his gra...\nnorm of the north: king sized adventure\n\n\n1\n80117401\nMovie\nJandino: Whatever it Takes\nNaN\nJandino Asporaat\nUnited Kingdom\nSeptember 9, 2016\n2016\nTV-MA\n94 min\nStand-Up Comedy\nJandino Asporaat riffs on the challenges of ra...\njandino: whatever it takes\n\n\n2\n70234439\nTV Show\nTransformers Prime\nNaN\nPeter Cullen, Sumalee Montano, Frank Welker, J...\nUnited States\nSeptember 8, 2018\n2013\nTV-Y7-FV\n1 Season\nKids' TV\nWith the help of three human allies, the Autob...\ntransformers prime\n\n\n3\n80058654\nTV Show\nTransformers: Robots in Disguise\nNaN\nWill Friedle, Darren Criss, Constance Zimmer, ...\nUnited States\nSeptember 8, 2018\n2016\nTV-Y7\n1 Season\nKids' TV\nWhen a prison ship crash unleashes hundreds of...\ntransformers: robots in disguise\n\n\n4\n80125979\nMovie\n#realityhigh\nFernando Lebrija\nNesta Cooper, Kate Walsh, John Michael Higgins...\nUnited States\nSeptember 8, 2017\n2017\nTV-14\n99 min\nComedies\nWhen nerdy high schooler Dani finally attracts...\n#realityhigh\n\n\n\n\n\n\n\n\ntmdb_df = tmdb_df.drop_duplicates(subset=['title_lower'])\nprint('TMDB dataset shape:', tmdb_df.shape)\ntmdb_df.head()\n\nTMDB dataset shape: (973912, 25)\n\n\n\n\n\n\n\n\n\nid\ntitle\nvote_average\nvote_count\nstatus\nrelease_date\nrevenue\nruntime\nadult\nbackdrop_path\n...\noverview\npopularity\nposter_path\ntagline\ngenres\nproduction_companies\nproduction_countries\nspoken_languages\nkeywords\ntitle_lower\n\n\n\n\n0\n27205\nInception\n8.364\n34495\nReleased\n2010-07-15\n825532764\n148\nFalse\n/8ZTVqvKDQ8emSGUEMjsS4yHAwrp.jpg\n...\nCobb, a skilled thief who commits corporate es...\n83.952\n/oYuLEt3zVCKq57qu2F8dT7NIa6f.jpg\nYour mind is the scene of the crime.\nAction, Science Fiction, Adventure\nLegendary Pictures, Syncopy, Warner Bros. Pict...\nUnited Kingdom, United States of America\nEnglish, French, Japanese, Swahili\nrescue, mission, dream, airplane, paris, franc...\ninception\n\n\n1\n157336\nInterstellar\n8.417\n32571\nReleased\n2014-11-05\n701729206\n169\nFalse\n/pbrkL804c8yAv3zBZR4QPEafpAR.jpg\n...\nThe adventures of a group of explorers who mak...\n140.241\n/gEU2QniE6E77NI6lCU6MxlNBvIx.jpg\nMankind was born on Earth. It was never meant ...\nAdventure, Drama, Science Fiction\nLegendary Pictures, Syncopy, Lynda Obst Produc...\nUnited Kingdom, United States of America\nEnglish\nrescue, future, spacecraft, race against time,...\ninterstellar\n\n\n2\n155\nThe Dark Knight\n8.512\n30619\nReleased\n2008-07-16\n1004558444\n152\nFalse\n/nMKdUUepR0i5zn0y1T4CsSB5chy.jpg\n...\nBatman raises the stakes in his war on crime. ...\n130.643\n/qJ2tW6WMUDux911r6m7haRef0WH.jpg\nWelcome to a world without rules.\nDrama, Action, Crime, Thriller\nDC Comics, Legendary Pictures, Syncopy, Isobel...\nUnited Kingdom, United States of America\nEnglish, Mandarin\njoker, sadism, chaos, secret identity, crime f...\nthe dark knight\n\n\n3\n19995\nAvatar\n7.573\n29815\nReleased\n2009-12-15\n2923706026\n162\nFalse\n/vL5LR6WdxWPjLPFRLe133jXWsh5.jpg\n...\nIn the 22nd century, a paraplegic Marine is di...\n79.932\n/kyeqWdyUXW608qlYkRqosgbbJyK.jpg\nEnter the world of Pandora.\nAction, Adventure, Fantasy, Science Fiction\nDune Entertainment, Lightstorm Entertainment, ...\nUnited States of America, United Kingdom\nEnglish, Spanish\nfuture, society, culture clash, space travel, ...\navatar\n\n\n4\n24428\nThe Avengers\n7.710\n29166\nReleased\n2012-04-25\n1518815515\n143\nFalse\n/9BBTo63ANSmhC4e6r62OJFuK2GL.jpg\n...\nWhen an unexpected enemy emerges and threatens...\n98.082\n/RYMX2wcKCBAr24UyPD7xwmjaTn.jpg\nSome assembly required.\nScience Fiction, Action, Adventure\nMarvel Studios\nUnited States of America\nEnglish, Hindi, Russian\nnew york city, superhero, shield, based on com...\nthe avengers\n\n\n\n\n5 rows × 25 columns\n\n\n\n\npost_netflix_df = post_netflix_df.drop_duplicates(subset=['title_lower'])\nprint('Netflix Post-COVID dataset shape:', post_netflix_df.shape)\npost_netflix_df.head()\n\nNetflix Post-COVID dataset shape: (5750, 16)\n\n\n\n\n\n\n\n\n\nid\ntitle\ntype\ndescription\nrelease_year\nage_certification\nruntime\ngenres\nproduction_countries\nseasons\nimdb_id\nimdb_score\nimdb_votes\ntmdb_popularity\ntmdb_score\ntitle_lower\n\n\n\n\n0\nts300399\nFive Came Back: The Reference Films\nSHOW\nThis collection includes 12 World War II-era p...\n1945\nTV-MA\n48\n['documentation']\n['US']\n1.0\nNaN\nNaN\nNaN\n0.600\nNaN\nfive came back: the reference films\n\n\n1\ntm84618\nTaxi Driver\nMOVIE\nA mentally unstable Vietnam War veteran works ...\n1976\nR\n113\n['crime', 'drama']\n['US']\nNaN\ntt0075314\n8.3\n795222.0\n27.612\n8.2\ntaxi driver\n\n\n2\ntm127384\nMonty Python and the Holy Grail\nMOVIE\nKing Arthur, accompanied by his squire, recrui...\n1975\nPG\n91\n['comedy', 'fantasy']\n['GB']\nNaN\ntt0071853\n8.2\n530877.0\n18.216\n7.8\nmonty python and the holy grail\n\n\n3\ntm70993\nLife of Brian\nMOVIE\nBrian Cohen is an average young Jewish man, bu...\n1979\nR\n94\n['comedy']\n['GB']\nNaN\ntt0079470\n8.0\n392419.0\n17.505\n7.8\nlife of brian\n\n\n4\ntm190788\nThe Exorcist\nMOVIE\n12-year-old Regan MacNeil begins to adapt an e...\n1973\nR\n133\n['horror']\n['US']\nNaN\ntt0070047\n8.1\n391942.0\n95.337\n7.7\nthe exorcist\n\n\n\n\n\n\n\nThe focus of my analysis is on movies. Removing TV shows ensures the dataset aligns with my analysis goal. Also, the number of TV shows is significantly lower compared to movies in both the datasets, further justifying the focus on movies.\n\n# Drop TV shows from pre_netflix_df \npre_netflix_df = pre_netflix_df[pre_netflix_df['type'] != \"TV Show\"]\npre_netflix_df.groupby('type').count().reset_index()\n\n\n\n\n\n\n\n\ntype\nshow_id\ntitle\ndirector\ncast\ncountry\ndate_added\nrelease_year\nrating\nduration\nlisted_in\ndescription\ntitle_lower\n\n\n\n\n0\nMovie\n4230\n4230\n4103\n3873\n4036\n4230\n4230\n4223\n4230\n4230\n4230\n4230\n\n\n\n\n\n\n\n\n# Drop SHOW from post_netflix_df\npost_netflix_df = post_netflix_df[post_netflix_df['type'] != \"SHOW\"]\npost_netflix_df.groupby('type').count().reset_index()\n\n\n\n\n\n\n\n\ntype\nid\ntitle\ndescription\nrelease_year\nage_certification\nruntime\ngenres\nproduction_countries\nseasons\nimdb_id\nimdb_score\nimdb_votes\ntmdb_popularity\ntmdb_score\ntitle_lower\n\n\n\n\n0\nMOVIE\n3729\n3728\n3721\n3729\n1395\n3729\n3729\n3729\n0\n3422\n3378\n3362\n3671\n3546\n3728\n\n\n\n\n\n\n\n\n\n3. Merging Datasets\nAfter cleaning the datasets by standardizing title cases to lowercase and removing duplicates, I merged the cleaned pre-COVID Netflix dataset and post-COVID Netflix dataset with the TMDB dataset. The merge was performed using an inner join on the standardized title column (title_lower). This approach ensures that only Netflix titles present in the TMDB dataset are included in the resulting merged datasets. The TMDB dataset contains additional information about titles, making it valuable for deeper analysis.\n\n# Merge datasets on standardized title\npre_merged_df = pd.merge(pre_netflix_df, tmdb_df, on='title_lower', how='inner')\n\n# Save pre merged dataset\npre_merged_df.to_csv('pre_covid_merged_titles.csv', index=False)\n\nprint(f'Pre-COVID Merged dataset shape: {pre_merged_df.shape}')\n\nPre-COVID Merged dataset shape: (3650, 37)\n\n\nFor the post-COVID Netflix dataset, an additional filter was applied to include only titles with a release year greater than or equal to 2020, ensuring that only relevant post-COVID titles are retained. After filtering, the dataset was merged with the TMDB dataset similarly using an inner join.\n\n# Filter post-COVID titles (release year &gt;= 2020)\npost_merged_df = post_netflix_df[post_netflix_df['release_year'] &gt;= 2020]\npost_merged_df = pd.merge(post_netflix_df, tmdb_df, on='title_lower', how='inner')\n\n# Save post-COVID merged dataset\npost_merged_df.to_csv('post_covid_merged_titles.csv', index=False)\n\nprint(f'Post-COVID merged dataset shape: {post_merged_df.shape}')\n\nPost-COVID merged dataset shape: (3610, 40)\n\n\nFinally, the resulting merged datasets were saved as separate CSV files:\n\npre_covid_merged_titles.csv contains the merged pre-COVID titles.\npost_covid_merged_titles.csv contains the merged post-COVID titles.\n\nThis process highlights the focus on aligning Netflix titles with TMDB data to enhance analysis capabilities. The shapes of the resulting datasets were printed to validate the number of titles retained after merging.\n\n\n4. Statistics and Identifying Common Titles\nNow, I need to isolate titles from each merged dataset for detailed comparisons or trend analysis, such as studying the impact of COVID on Netflix’s content library. Also, this is required so that no duplicates are analyzed when analyzing pre-COVID and post-COVID data seperately.\n\n# Load pre-COVID dataset\nfiltered_df = pd.read_csv('pre_covid_merged_titles.csv')\n\n\n# Load post-COVID dataset\npost_matching_df = pd.read_csv('post_covid_merged_titles.csv')\n\n\n# Find common titles between datasets\ncommon_titles = pd.merge(filtered_df, post_matching_df, on='title_lower', how='inner')\n# Save common and remaining titles\ncommon_titles.to_csv('common_titles.csv', index=False)\nprint(f'Number of common titles: {common_titles.shape[0]}')\n\nNumber of common titles: 1484\n\n\n\n#Filtering out the remaining titles for pre-COVID\npre_covid_remaining = filtered_df[~filtered_df['title_lower'].isin(common_titles['title_lower'])]\npre_covid_remaining.to_csv('pre_covid_remaining.csv', index=False)\nprint(f'Number of pre-COVID titles: {pre_covid_remaining.shape[0]}')\n\nNumber of pre-COVID titles: 2166\n\n\n\n#Filtering out the remaining titles for post-COVID\npost_covid_remaining = post_matching_df[~post_matching_df['title_lower'].isin(common_titles['title_lower'])]\npost_covid_remaining.to_csv('post_covid_remaining.csv', index=False)\nprint(f'Number of post-COVID titles: {post_covid_remaining.shape[0]}')\n\nNumber of post-COVID titles: 2126"
  },
  {
    "objectID": "posts/TMDb_Netflix_Connect_Notebook.html#conclusion",
    "href": "posts/TMDb_Netflix_Connect_Notebook.html#conclusion",
    "title": "Data Preparation:",
    "section": "Conclusion:",
    "text": "Conclusion:\nIn this notebook, we successfully prepared and processed two datasets-Netflix and TMDB-to identify common movie titles and explore post-COVID trends. The key steps involved were:\n\nData Loading and Inspection: Reviewed and summarized the datasets, providing an overview of their structure and content.\nData Cleaning and Transformation: Standardized titles, removed duplicates, and ensured consistency for reliable comparisons.\nMerging and Filtering: Merged datasets based on movie titles and applied filters to focus on specific timeframes, such as post-COVID releases.\nStatistics and Identifying Common Titles Generated key statistics, identified overlaps between datasets, and exported the cleaned and filtered datasets for further analysis. This process not only streamlined the data for easier use but also highlighted important patterns, such as trends in movie releases and shared titles between platforms."
  },
  {
    "objectID": "posts/Analysis_Visualization.html",
    "href": "posts/Analysis_Visualization.html",
    "title": "Analysis and Visualization:",
    "section": "",
    "text": "This notebook builds on the prepared datasets from Netflix and TMDB to analyze and visualize key trends in Netflix’s movie catalog. By comparing the pre-COVID and post-COVID periods, it highlights shifts in content strategy, audience preferences, and the overall impact of the pandemic on Netflix’s offerings. Through clear visualizations and statistical summaries, this notebook uncovers insights that help explain the evolving dynamics of the streaming platform’s movie library."
  },
  {
    "objectID": "posts/Analysis_Visualization.html#exploring-netflix-titles-trends-a-pre--and-post-covid-analysis",
    "href": "posts/Analysis_Visualization.html#exploring-netflix-titles-trends-a-pre--and-post-covid-analysis",
    "title": "Analysis and Visualization:",
    "section": "Exploring Netflix Titles Trends: A Pre- and Post-COVID Analysis",
    "text": "Exploring Netflix Titles Trends: A Pre- and Post-COVID Analysis\nThis exploratory data analysis (EDA) investigates trends in movie datasets, focusing on comparing various attributes pre- and post-COVID. The objective is to identify notable shifts in production strategies, viewer preferences, and genre-specific patterns. The analysis includes visualizations and statistical summaries to provide actionable insights into how the film industry evolved during these periods. A KDE(Kernel Density Estimate) plot has been employed to plot continuous variables since KDE plots are particularly useful when comparing multiple distributions and provides a smooth curve making it easier to do a comparison between pre-COVID and post-COVID periods. This notebook includes:\n\nRatings Distribution\nRevenue Distribution\nBudget Distribution\nGenre Distribution\nRuntime Distribution\nProduction Countries Distribution\nKeywords Distribution\n\nand comparison of some continuous variables with Genre:\n\nRuntime by Genre\nRatings by Genre\nRevenue by Genre\nBudget by Genre\n\nThis study aims to highlight the implications of these shifts on the industry and inform future strategies.\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np"
  },
  {
    "objectID": "posts/Analysis_Visualization.html#load-data-and-style",
    "href": "posts/Analysis_Visualization.html#load-data-and-style",
    "title": "Analysis and Visualization:",
    "section": "Load data and style",
    "text": "Load data and style\nThe analysis utilizes two key DataFrames:\n\npost_data: This dataset represents movies released post-COVID. It was created by connecting and enriching data from two sources with the TMDB dataset.\npre_data: This dataset represents movies released pre-COVID, similarly created by connecting and enriching data from two sources with the TMDB dataset.\n\n\npost_data = pd.read_csv(\"post_covid_remaining.csv\")\npre_data = pd.read_csv(\"pre_covid_remaining.csv\")\n\nsns.set(style=\"whitegrid\")"
  },
  {
    "objectID": "posts/Analysis_Visualization.html#helper-function-for-plotting-distributions",
    "href": "posts/Analysis_Visualization.html#helper-function-for-plotting-distributions",
    "title": "Analysis and Visualization:",
    "section": "Helper function for plotting distributions",
    "text": "Helper function for plotting distributions\n\ndef plot_distribution(data, column, title, bins=30, xlabel=None, ylabel=\"Frequency\"):\n    plt.figure(figsize=(10, 6))\n    sns.histplot(data[column].dropna(), bins=bins, kde=True, alpha=0.7)\n    plt.title(title, fontsize=16)\n    plt.xlabel(xlabel if xlabel else column, fontsize=14)\n    plt.ylabel(ylabel, fontsize=14)\n    plt.show()"
  },
  {
    "objectID": "posts/Analysis_Visualization.html#ratings-distribution",
    "href": "posts/Analysis_Visualization.html#ratings-distribution",
    "title": "Analysis and Visualization:",
    "section": "Ratings Distribution",
    "text": "Ratings Distribution\n\ndef plot_combined_distribution(data1, data2, column, label1, label2, color1, color2, title, xlabel):\n    data1_filtered = data1[(data1[column] &gt; 0) & (data1[\"vote_count\"] &gt;= 10)]\n    data2_filtered = data2[(data2[column] &gt; 0) & (data2[\"vote_count\"] &gt;= 10)]\n    \n    plt.figure(figsize=(10, 6))\n    \n    sns.kdeplot(data=data1_filtered[column], label=label1, color=color1, fill=True, alpha=0.5)\n    sns.kdeplot(data=data2_filtered[column], label=label2, color=color2, fill=True, alpha=0.5)\n    \n    plt.title(title, fontsize=16)\n    plt.xlabel(xlabel, fontsize=14)\n    plt.ylabel(\"Density\", fontsize=14)\n    plt.legend(fontsize=12)\n    plt.tight_layout()\n    plt.show()\n\nplot_combined_distribution(\n    post_data, pre_data,\n    column=\"vote_average\",\n    label1=\"Post-COVID\",\n    label2=\"Pre-COVID\",\n    color1=\"salmon\",\n    color2=\"lightgreen\",\n    title=\"Ratings Distribution: Post-COVID vs Pre-COVID\",\n    xlabel=\"Rating\"\n)\n\n\n\n\n\n\n\n\n\nObservations:\nThe density plot clearly shows that the curve for the post-COVID period is shifted further to the right along the x-axis, indicating that movie ratings post-COVID were generally higher compared to pre-COVID ratings. This shift could reflect a change in viewer preferences, with audiences potentially being more selective or generous in their ratings as a result of altered viewing habits and content consumption patterns. The concentration of ratings in the higher range post-COVID suggests an overall improvement in the quality of content or a more positive reception of movies during this period."
  },
  {
    "objectID": "posts/Analysis_Visualization.html#revenue-distribution",
    "href": "posts/Analysis_Visualization.html#revenue-distribution",
    "title": "Analysis and Visualization:",
    "section": "Revenue Distribution",
    "text": "Revenue Distribution\n\n\ndef log_transform_column(data, column):\n    return np.log10(data[column])\n\ndef plot_combined_revenue_distribution(pre_data, post_data):\n    if \"revenue\" in post_data.columns:\n        post_revenue_data = post_data[post_data[\"revenue\"] &gt; 0].copy()\n        post_revenue_data[\"log_revenue\"] = log_transform_column(post_revenue_data, \"revenue\")\n    \n    if \"revenue\" in pre_data.columns:\n        pre_revenue_data = pre_data[pre_data[\"revenue\"] &gt; 0].copy()\n        pre_revenue_data[\"log_revenue\"] = log_transform_column(pre_revenue_data, \"revenue\")\n\n    plt.figure(figsize=(10, 6))\n    \n    sns.kdeplot(post_revenue_data[\"log_revenue\"], label=\"Post-COVID\", color=\"salmon\", fill=True, alpha=0.4)\n    \n    sns.kdeplot(pre_revenue_data[\"log_revenue\"], label=\"Pre-COVID\", color=\"lightgreen\", fill=True, alpha=0.4)\n    \n    plt.title(\"Pre-COVID vs Post-COVID Log-Scaled Revenue Distribution\", fontsize=16)\n    plt.xlabel(\"Log10(Revenue)\", fontsize=14)\n    plt.ylabel(\"Density\", fontsize=14)\n    plt.legend(title=\"Dataset\", fontsize=12)\n    plt.tight_layout()\n    plt.show()\n\nplot_combined_revenue_distribution(pre_data, post_data)\n\n\n\n\n\n\n\n\n\nObservations:\nThe revenue has remained relatively consistent overall, but the post-COVID period exhibits a more pronounced peak in the denser region of the distribution plot. This suggests that, while the overall revenue levels have not changed drastically, there may be a shift towards higher revenue in certain periods post-COVID. The concentration of values in the higher range could indicate stronger performance or growth in specific segments of the market, potentially driven by changes in consumer behavior or market conditions during this period."
  },
  {
    "objectID": "posts/Analysis_Visualization.html#budget-distribution",
    "href": "posts/Analysis_Visualization.html#budget-distribution",
    "title": "Analysis and Visualization:",
    "section": "Budget Distribution",
    "text": "Budget Distribution\n\ndef plot_combined_budget_distribution(pre_data, post_data):\n    if \"budget\" in post_data.columns:\n        post_budget_data = post_data[post_data[\"budget\"] &gt; 0].copy()\n        post_budget_data[\"log_budget\"] = log_transform_column(post_budget_data, \"budget\")\n    \n    if \"budget\" in pre_data.columns:\n        pre_budget_data = pre_data[pre_data[\"budget\"] &gt; 0].copy()\n        pre_budget_data[\"log_budget\"] = log_transform_column(pre_budget_data, \"budget\")\n\n    plt.figure(figsize=(10, 6))\n    \n    sns.kdeplot(post_budget_data[\"log_budget\"], label=\"Post-COVID\", color=\"salmon\", fill=True, alpha = 0.5)\n    \n    sns.kdeplot(pre_budget_data[\"log_budget\"], label=\"Pre-COVID\", color=\"lightgreen\", fill=True, alpha = 0.5)\n    \n    plt.title(\"Pre-COVID vs Post-COVID Budget Distribution\", fontsize=16)\n    plt.xlabel(\"Log10(Budget)\", fontsize=14)\n    plt.ylabel(\"Density\", fontsize=14)\n    plt.legend(title=\"Dataset\", fontsize=12)\n    plt.tight_layout()\n    plt.show()\n\nplot_combined_budget_distribution(pre_data, post_data)\n\n\n\n\n\n\n\n\n\nObservations:\nThe log-scaled budget distribution reveals a noticeable shift in the post-COVID period, with an increase in both lower and higher budget films, while mid-budget films appear more prominently in the pre-COVID distribution. The densest region remains similar for both periods, but the post-COVID curve shows a higher peak, indicating a concentration of films with either lower or higher budgets, potentially reflecting changes in production strategies or market demand post-COVID. This shift could suggest a polarizing trend in film budgets, with more emphasis on either lower-cost or blockbuster films, while mid-tier productions become less common."
  },
  {
    "objectID": "posts/Analysis_Visualization.html#genre-distribution",
    "href": "posts/Analysis_Visualization.html#genre-distribution",
    "title": "Analysis and Visualization:",
    "section": "Genre Distribution",
    "text": "Genre Distribution\n\ndef plot_combined_genre_distribution(pre_data, pre_genre_col, post_data, post_genre_col, title):\n    pre_genres = pre_data[pre_genre_col].str.split(\",\").explode().str.strip()\n    pre_genres = pre_genres[pre_genres.str.lower() != \"tv movie\"]\n    pre_genre_counts = pre_genres.value_counts()\n    \n    post_genres = post_data[post_genre_col].str.split(\",\").explode().str.strip()\n    post_genres = post_genres[post_genres.str.lower() != \"tv movie\"]\n    post_genre_counts = post_genres.value_counts()\n\n    combined_counts = pd.DataFrame({\n        \"Pre-COVID\": pre_genre_counts,\n        \"Post-COVID\": post_genre_counts\n    }).fillna(0)\n\n    combined_counts.sort_index(inplace=True)\n    combined_counts.plot(kind=\"bar\", figsize=(14, 10), color=[\"lightgreen\", \"salmon\"])\n    plt.title(title, fontsize=16)\n    plt.xlabel(\"Genre\", fontsize=14)\n    plt.ylabel(\"Count\", fontsize=14)\n    plt.legend(title=\"Dataset\", fontsize=12)\n    plt.tight_layout()\n    plt.show()\n\nplot_combined_genre_distribution(\n    pre_data, \n    \"genres\", \n    post_data, \n    \"genres_y\", \n    \"Pre-COVID vs Post-COVID Genre Distribution\"\n)\n\n\n\n\n\n\n\n\n\nObservations:\nThe genre distribution plot indicates an increase in the number of titles in the post-COVID period for genres such as Animation, Comedy, Family, Fantasy, and Music. Conversely, genres like Action, Crime, Documentary, Horror, and Thriller have seen a decrease in the number of titles. Adventure, Drama, and Mystery genres have remained relatively consistent across both periods, suggesting that while some genres have experienced growth or decline, others have maintained stable production levels. This could reflect shifting audience preferences or changes in content production during the post-COVID era."
  },
  {
    "objectID": "posts/Analysis_Visualization.html#runtime-distribution",
    "href": "posts/Analysis_Visualization.html#runtime-distribution",
    "title": "Analysis and Visualization:",
    "section": "Runtime Distribution",
    "text": "Runtime Distribution\n\npre_data_filtered = pre_data[pre_data[\"runtime\"] &gt;= 10]\npost_data_filtered = post_data[post_data[\"runtime_x\"] &gt;= 10]\n\ndef plot_combined_runtime_distribution(pre_data, post_data, title, runtime_col_pre, runtime_col_post, xlabel=\"Runtime (minutes)\"):\n    post_runtime_data = post_data[post_data[runtime_col_post] &lt;= 600][runtime_col_post].reset_index(drop=True)\n    pre_runtime_data = pre_data[pre_data[runtime_col_pre] &lt;= 600][runtime_col_pre].reset_index(drop=True)\n    \n    combined_runtime_data = pd.DataFrame({\n        \"Post-COVID\": post_runtime_data,\n        \"Pre-COVID\": pre_runtime_data\n    })\n    \n    plt.figure(figsize=(14, 10))\n    sns.kdeplot(data=combined_runtime_data, fill=True, common_norm=False, palette=[\"lightgreen\", \"salmon\"])\n    plt.title(title, fontsize=16)\n    plt.xlabel(xlabel, fontsize=14)\n    plt.ylabel(\"Density\", fontsize=14)\n    plt.legend(labels=[\"Post-COVID\", \"Pre-COVID\"], title=\"Dataset\", fontsize=12)\n    plt.tight_layout()\n    plt.show()\n\nplot_combined_runtime_distribution(\n    pre_data_filtered, \n    post_data_filtered, \n    \"Pre-COVID vs Post-COVID Runtime Density Distribution\", \n    runtime_col_pre=\"runtime\", \n    runtime_col_post=\"runtime_x\"\n)\n\n\n\n\n\n\n\n\n\nObservations:\nBoth the Pre-COVID and Post-COVID runtime distributions appear to follow a similar pattern, peaking at around 90-100 minutes. This suggests that most titles during both periods had runtimes clustered around this range. - Density Variation: The Post-COVID dataset (red) shows a slightly higher peak density compared to the Pre-COVID dataset (green). This could imply a tighter clustering of runtimes during the Post-COVID period. - Longer Runtimes: Both distributions taper off for longer runtimes (&gt;150 minutes), indicating that titles with exceptionally long runtimes were rare in both periods. - Short Runtimes: There is a noticeable difference in the short runtime range (&lt;50 minutes). The Pre-COVID dataset shows more density for shorter titles than the Post-COVID dataset. This could indicate a reduction in shorter runtime titles after COVID. These insights suggest some changes in runtime distribution between the Pre-COVID and Post-COVID periods, with notable differences at the shorter and peak runtime ranges."
  },
  {
    "objectID": "posts/Analysis_Visualization.html#production-countries-distribution",
    "href": "posts/Analysis_Visualization.html#production-countries-distribution",
    "title": "Analysis and Visualization:",
    "section": "Production Countries Distribution",
    "text": "Production Countries Distribution\n\ndef plot_combined_production_countries(pre_data, pre_country_col, post_data, post_country_col, title, country_mapping):\n    pre_countries = pre_data[pre_country_col].str.split(\",\").explode().str.strip()\n    pre_country_counts = pre_countries.value_counts()\n\n    post_countries = post_data[post_country_col].str.extractall(r\"'?([A-Z]{2})'?\\]?\")[0]\n    post_countries_mapped = post_countries.map(country_mapping)\n    \n    post_country_counts = post_countries_mapped.dropna().value_counts()\n\n    combined_counts = pd.DataFrame({\n        \"Pre-COVID\": pre_country_counts,\n        \"Post-COVID\": post_country_counts\n    }).fillna(0)\n\n    combined_counts = combined_counts.nlargest(20, [\"Pre-COVID\", \"Post-COVID\"])\n    \n    combined_counts.sort_index(inplace=True)\n    combined_counts.plot(kind=\"bar\", figsize=(14, 10), color=[\"lightgreen\", \"salmon\"])\n    plt.title(title, fontsize=16)\n    plt.xlabel(\"Production Country\", fontsize=14)\n    plt.ylabel(\"Count\", fontsize=14)\n    plt.legend(title=\"Dataset\", fontsize=12)\n    plt.tight_layout()\n    plt.show()\n\ncountry_mapping = {\n    \"US\": \"United States\",\n    \"GB\": \"United Kingdom\",\n    \"CA\": \"Canada\",\n    \"FR\": \"France\",\n    \"IN\": \"India\",\n    \"JP\": \"Japan\",\n    \"DE\": \"Germany\",\n    \"IT\": \"Italy\",\n    \"AU\": \"Australia\",\n    \"KR\": \"South Korea\",\n    \"CN\": \"China\",\n    \"ES\": \"Spain\",\n    \"MX\": \"Mexico\",\n    \"NG\": \"Nigeria\",\n    \"EG\": \"Egypt\",\n    \"PH\": \"Philippines\",\n    \"ID\": \"Indonesia\",\n    \"TH\": \"Thailand\",\n    \"TR\": \"Turkey\",\n    \"PL\": \"Poland\",\n    \"HK\": \"Hong Kong\",\n    \"BE\": \"Belgium\",\n    \"TW\": \"Taiwan\",\n    \"BR\": \"Brazil\",\n    \"RU\": \"Russia\",\n    \"SG\": \"Singapore\",\n    \"FI\": \"Finland\",\n    \"SE\": \"Sweden\",\n    \"NL\": \"Netherlands\",\n    \"ZA\": \"South Africa\",\n    \"IE\": \"Ireland\",\n    \"NZ\": \"New Zealand\"\n}\n\nplot_combined_production_countries(\n    pre_data, \n    \"country\", \n    post_data, \n    \"production_countries_x\", \n    \"Pre-COVID vs Post-COVID Production Countries Distribution\",\n    country_mapping\n)\n\n\n\n\n\n\n\n\n\nObservations:\nAlthough the number of titles produced post-COVID decreased for the Big-3 production countries—United States, India, and the United Kingdom—several other countries, including Japan, Nigeria, Spain, and South Korea, saw an increase in the number of titles. Even Canada, the fourth-largest production country, experienced a decline. Japan, in particular, showed a significant increase. Countries like France, Germany, Mexico, and Belgium remained relatively stable in terms of title production. Despite a notable decrease, the United States still leads in total number of titles, far surpassing other countries, with India in second place showing a slight decrease, followed by the UK, which experienced a more substantial decline."
  },
  {
    "objectID": "posts/Analysis_Visualization.html#keywords-distribution",
    "href": "posts/Analysis_Visualization.html#keywords-distribution",
    "title": "Analysis and Visualization:",
    "section": "Keywords Distribution",
    "text": "Keywords Distribution\nTo analyze the distribution of keywords associated with movies in the datasets, a WordCloud visualization was employed. This technique helps highlight the most frequently occurring keywords, providing insights into thematic trends in movie production pre- and post-COVID.\n\nfrom wordcloud import WordCloud\n\ndef plot_combined_keywords_wordcloud(pre_data, post_data, title):\n    pre_keywords = pre_data[\"keywords\"].str.split(\",\").explode().str.strip().dropna()\n    pre_keywords_text = \" \".join(pre_keywords)\n    pre_keywords_text = pre_keywords_text.replace(\"based\", \"\")\n    pre_keywords_text = pre_keywords_text.replace(\"loved one\", \"\") \n    pre_keywords_text = pre_keywords_text.replace(\"angeles\", \"\")\n    pre_keywords_text = pre_keywords_text.replace(\"los\", \"\")\n    pre_keywords_text = pre_keywords_text.replace(\"york city\", \"\")\n    pre_keywords_text = pre_keywords_text.replace(\"stand\", \"stand up\")\n\n    post_keywords = post_data[\"keywords\"].str.split(\",\").explode().str.strip().dropna()\n    post_keywords_text = \" \".join(post_keywords)\n    post_keywords_text = post_keywords_text.replace(\"based\", \"\")\n    post_keywords_text = post_keywords_text.replace(\"ii\", \"\")\n    post_keywords_text = post_keywords_text.replace(\"stand\", \"stand up\")\n\n    pre_wordcloud = WordCloud(width=800, height=600, background_color=\"black\", colormap=\"YlGn\").generate(pre_keywords_text)\n    post_wordcloud = WordCloud(width=800, height=600, background_color=\"black\", colormap=\"Reds\").generate(post_keywords_text)\n\n    fig, axs = plt.subplots(1, 2, figsize=(18, 10))\n    axs[0].imshow(pre_wordcloud, interpolation=\"bilinear\")\n    axs[0].axis(\"off\")\n    axs[0].set_title(\"Pre-COVID Keywords Word Cloud\", fontsize=16)\n\n    axs[1].imshow(post_wordcloud, interpolation=\"bilinear\")\n    axs[1].axis(\"off\")\n    axs[1].set_title(\"Post-COVID Keywords Word Cloud\", fontsize=16)\n\n    fig.suptitle(title, fontsize=18)\n    plt.tight_layout()\n    plt.show()\n\nplot_combined_keywords_wordcloud(pre_data, post_data, \"Pre-COVID vs Post-COVID Keywords Word Cloud\")\n\n\n\n\n\n\n\n\n\n\nObservations:\n\nPre-COVID Keywords:\nThe WordCloud for pre-COVID movies shows a more uniform distribution of word sizes, indicating a relatively balanced emphasis across various themes.\n\n\nPost-COVID Keywords:\nThe WordCloud for post-COVID movies highlights notably larger words like “novel,” “book,” and “true story,” suggesting a significant increase in titles based on literature or real-life events.\nKeywords such as “comedy” and “murder” also appear more prominently, reflecting a potential shift in audience preferences or production focus towards these themes."
  },
  {
    "objectID": "posts/Analysis_Visualization.html#comparison---post-covid-vs-pre-covid-runtime-by-genre",
    "href": "posts/Analysis_Visualization.html#comparison---post-covid-vs-pre-covid-runtime-by-genre",
    "title": "Analysis and Visualization:",
    "section": "Comparison - Post-Covid vs Pre-Covid (Runtime by Genre)",
    "text": "Comparison - Post-Covid vs Pre-Covid (Runtime by Genre)\n\npost_data['period'] = 'Post-COVID'\npre_data['period'] = 'Pre-COVID'\n\npost_data = post_data.assign(genres_y=post_data['genres_y'].str.split(\",\")).explode('genres_y')\npost_data['genres_y'] = post_data['genres_y'].str.strip().str.lower()\n\npre_data = pre_data.assign(genres=pre_data['genres'].str.split(\",\")).explode('genres')\npre_data['genres'] = pre_data['genres'].str.strip().str.lower()\n\ncombined_data = pd.concat([\n    post_data[['runtime_x', 'genres_y', 'period']].rename(columns={'runtime_x': 'runtime', 'genres_y': 'genre'}),\n    pre_data[['runtime', 'genres', 'period']].rename(columns={'genres': 'genre'})\n], ignore_index=True)\n\ncombined_data = combined_data[(combined_data['runtime'] &lt;= 300) & combined_data['genre'].notna()]\n\ncombined_data['genre'] = combined_data['genre'].str.strip()\ngenre_order = sorted(combined_data['genre'].unique())\n\nplt.figure(figsize=(16, 8))\nsns.boxplot(\n    data=combined_data,\n    x='genre',\n    y='runtime',\n    hue='period',\n    order=genre_order,\n    showfliers=False,\n    palette={'Pre-COVID': 'lightgreen', 'Post-COVID': 'salmon'}\n)\n\nplt.xticks(rotation=45, ha='right', fontsize=12)\nplt.title('Comparison of Runtime by Genre (Pre-COVID vs Post-COVID)', fontsize=16)\nplt.xlabel('Genre', fontsize=14)\nplt.ylabel('Runtime (minutes)', fontsize=14)\nplt.legend(title='Period', fontsize=12)\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nObservations:\nTo understand how movie runtimes evolved across genres during the post-COVID period compared to pre-COVID, runtime distributions were analyzed. The key findings include:\nPost-COVID runtimes for Animation and Family genres show a noticeable increase in their median values compared to pre-COVID. This could indicate a shift towards longer storytelling formats in family-oriented genres.\n\nAction and Adventure:\nRuntimes in these genres remain relatively consistent across both periods, suggesting sustained audience expectations for these genres.\n\n\nDocumentaries:\nPost-COVID, there is a wider spread in runtimes for documentaries, indicating a diverse approach to storytelling, potentially driven by increased production of short-form content and feature-length documentaries.\n\n\nDrama and Thriller:\nMinimal changes were observed in runtime distributions, implying stability in audience preferences for these genres."
  },
  {
    "objectID": "posts/Analysis_Visualization.html#comparison-of-continuous-variables-with-genre",
    "href": "posts/Analysis_Visualization.html#comparison-of-continuous-variables-with-genre",
    "title": "Analysis and Visualization:",
    "section": "Comparison of continuous variables with Genre",
    "text": "Comparison of continuous variables with Genre\n\ndef plot_metric_by_genre_combined(pre_data, pre_genre_col, pre_metric_col, post_data, post_genre_col, post_metric_col, title, ylabel):\n    pre_genres_exploded = pre_data.copy()\n    pre_genres_exploded[pre_genre_col] = pre_genres_exploded[pre_genre_col].str.split(\",\").explode().str.strip()\n    pre_genres_exploded = pre_genres_exploded[\n        (pre_genres_exploded[pre_metric_col] &gt; 0) & (pre_genres_exploded[pre_genre_col].str.lower() != \"tv movie\")\n    ]\n    \n    post_genres_exploded = post_data.copy()\n    post_genres_exploded[post_genre_col] = post_genres_exploded[post_genre_col].str.split(\",\").explode().str.strip()\n    post_genres_exploded = post_genres_exploded[\n        (post_genres_exploded[post_metric_col] &gt; 0) & (post_genres_exploded[post_genre_col].str.lower() != \"tv movie\")\n    ]\n    \n    pre_grouped = pre_genres_exploded.groupby(pre_genre_col)[pre_metric_col].mean().sort_index()\n    post_grouped = post_genres_exploded.groupby(post_genre_col)[post_metric_col].mean().sort_index()\n    \n    combined_metrics = pd.DataFrame({\n        \"Pre-COVID\": pre_grouped,\n        \"Post-COVID\": post_grouped\n    }).fillna(0)\n\n    combined_metrics.plot(kind=\"bar\", figsize=(14, 10), color=[\"lightgreen\", \"salmon\"])\n    plt.title(title, fontsize=16)\n    plt.xlabel(\"Genre\", fontsize=14)\n    plt.ylabel(ylabel, fontsize=14)\n    plt.legend(title=\"Dataset\", fontsize=12)\n    plt.xticks(rotation=45, ha=\"right\")\n    plt.tight_layout()\n    plt.show()"
  },
  {
    "objectID": "posts/Analysis_Visualization.html#ratings-distribution-by-genre",
    "href": "posts/Analysis_Visualization.html#ratings-distribution-by-genre",
    "title": "Analysis and Visualization:",
    "section": "Ratings distribution by Genre",
    "text": "Ratings distribution by Genre\nOverview: The box plot compares the average ratings of movies across genres for Pre-COVID and Post-COVID periods.\n\nplot_metric_by_genre_combined(\n    pre_data=pre_data,\n    pre_genre_col=\"genres\",\n    pre_metric_col=\"vote_average\",\n    post_data=post_data,\n    post_genre_col=\"genres_y\",\n    post_metric_col=\"vote_average\",\n    title=\"Average Ratings by Genre: Pre-COVID vs Post-COVID\",\n    ylabel=\"Average Rating\"\n)\n\n\n\n\n\n\n\n\n\nObservations:\n\nThe Post-COVID period shows slightly more variability in ratings for genres like Action, Adventure and Horror, possibly reflecting changing audience preferences during the pandemic.\nGenres like Animation and Family exhibit relatively consistent ratings between Pre-COVID and Post-COVID periods, indicating sustained quality and appeal."
  },
  {
    "objectID": "posts/Analysis_Visualization.html#revenue-distribution-by-genre",
    "href": "posts/Analysis_Visualization.html#revenue-distribution-by-genre",
    "title": "Analysis and Visualization:",
    "section": "Revenue distribution by Genre",
    "text": "Revenue distribution by Genre\nOverview: This analysis explores the average revenue generated by movies in each genre.\n\nplot_metric_by_genre_combined(\n    pre_data=pre_data,\n    pre_genre_col=\"genres\",\n    pre_metric_col=\"revenue\",\n    post_data=post_data,\n    post_genre_col=\"genres_y\",\n    post_metric_col=\"revenue\",\n    title=\"Average Revenue by Genre: Pre-COVID vs Post-COVID\",\n    ylabel=\"Average Revenue\"\n)\n\n\n\n\n\n\n\n\n\nObservations:\n\nAction, Adventure, and Science-Fiction genres consistently dominate revenue generation, both Pre-COVID and Post-COVID. These genres likely benefit from big-budget franchises and international appeal.\nComedy, Drama and Romance genres maintain steady revenue performance across periods, likely due to their appeal as lower-budget, high-impact entertainment options.\nFamily-friendly genres like Animation and Family show resilience in revenue, possibly driven by streaming releases and demand for all-age entertainment during the pandemic."
  },
  {
    "objectID": "posts/Analysis_Visualization.html#budget-distribution-by-genre",
    "href": "posts/Analysis_Visualization.html#budget-distribution-by-genre",
    "title": "Analysis and Visualization:",
    "section": "Budget distribution by Genre",
    "text": "Budget distribution by Genre\nOverview: The plot examines the average budget allocated to movies across genres.\n\nplot_metric_by_genre_combined(\n    pre_data=pre_data,\n    pre_genre_col=\"genres\",\n    pre_metric_col=\"budget\",\n    post_data=post_data,\n    post_genre_col=\"genres_y\",\n    post_metric_col=\"budget\",\n    title=\"Average Budget by Genre: Pre-COVID vs Post-COVID\",\n    ylabel=\"Average Budget\"\n)\n\n\n\n\n\n\n\n\n\nObservations:\n\nAction, Adventure, Fantasy and Sci-Fi genres have the highest budgets, which aligns with the expensive nature of visual effects and international blockbuster productions.\nDuring the Post-COVID period, certain genres like History and Mystery exhibit lower budgets, reflecting industry caution in greenlighting mid-budget productions.\nGenres such as Horror, Music and Documentary continue to be produced with lower budgets, maintaining their status as cost-effective genres.\n\n\nGenres with Consistency:\nGenres like Comedy, Drama and Romance show relatively stable performance in ratings, revenue, and budget across both periods, suggesting their steady appeal and showing little to no impact to external disruptions.\n\n\nImpact of the Pandemic:\nThe pandemic seems to have increased audience demand for escapist genres like Action, Adventure, and Fantasy, as the ratings have increased for these genres.\n\n\nBig-Budget vs. Low-Budget Trends:\nBig-budget genres like Action, Adventure, Fantasy and Science Fiction saw a reduce in revenue as well as the budget post-covid compared to pre-covid. This might be due to restrictions during covid as these genres require larger scale productions.\nLow-budget genres like Horror and Music continue to perform steadily, but the revenue seems to have gone down."
  },
  {
    "objectID": "posts/Analysis_Visualization.html#conclusion",
    "href": "posts/Analysis_Visualization.html#conclusion",
    "title": "Analysis and Visualization:",
    "section": "Conclusion",
    "text": "Conclusion\nThe analysis reveals distinct shifts in the movie industry’s dynamics across ratings, revenue, and budgets during the Pre-COVID and Post-COVID periods. While some genres demonstrated resilience, others faced challenges reflective of changing audience preferences and production constraints.\n\nResilient Genres:\nFamily-friendly genres like Animation and Family, and low-budget genres like Horror and Music, maintained consistent ratings and appeal. These genres adapted well to pandemic-related shifts, leveraging streaming platforms and low production costs to sustain their performance.\n\n\nChallenges for Big-Budget Genres:\nTraditionally dominant genres such as Action, Adventure, Fantasy, and Science Fiction saw reduced budgets and revenues during the Post-COVID period. This decline likely stems from the logistical challenges and restrictions imposed on large-scale productions during the pandemic, underscoring the vulnerability of high-budget films to external disruptions.\n\n\nAudience Preference Shifts:\nThe Post-COVID period saw increased variability in ratings for genres like Action, Adventure, and Horror, reflecting the evolving tastes of audiences. Escapist genres gained popularity, driven by the demand for visually engaging, immersive entertainment during uncertain times.\n\n\nEconomic Caution:\nMid-budget genres such as Drama, Comedy, and Romance maintained steady revenue and budgets across periods. However, genres like History and Mystery experienced reduced budgets, highlighting cautious investment decisions in less commercially predictable genres.\n\n\nFinal Takeaway:\nThe pandemic has underscored the importance of adaptability in the film industry. While large-scale productions faced setbacks, genres that thrive on modest budgets and family appeal proved to be resilient. Moving forward, balancing blockbuster ambitions with economic prudence and leveraging streaming platforms for diverse genres could help the industry navigate uncertainties and maximize audience engagement.\nOverall, this analysis underscores the resilience of the movie industry in adapting to changing circumstances and audience preferences during and after the COVID-19 pandemic. The findings provide valuable insights for filmmakers, producers, and marketers to tailor strategies for future content creation and distribution."
  },
  {
    "objectID": "posts/Analysis_Visualization_v01.html",
    "href": "posts/Analysis_Visualization_v01.html",
    "title": "Exploring Netflix Titles Trends: A Pre- and Post-COVID Analysis",
    "section": "",
    "text": "This exploratory data analysis (EDA) investigates trends in movie datasets, focusing on comparing various attributes pre- and post-COVID. The objective is to identify notable shifts in production strategies, viewer preferences, and genre-specific patterns. The analysis includes visualizations and statistical summaries to provide actionable insights into how the film industry evolved during these periods. A KDE(Kernel Density Estimate) plot has been employed to plot continuous variables since KDE plots are particularly useful when comparing multiple distributions and provides a smooth curve making it easier to do a comparison between pre-COVID and post-COVID periods. This notebook includes:\nand comparison of some continuous variables with Genre:\nThis study aims to highlight the implications of these shifts on the industry and inform future strategies.\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np"
  },
  {
    "objectID": "posts/Analysis_Visualization_v01.html#load-data-and-style",
    "href": "posts/Analysis_Visualization_v01.html#load-data-and-style",
    "title": "Exploring Netflix Titles Trends: A Pre- and Post-COVID Analysis",
    "section": "Load data and style",
    "text": "Load data and style\nThe analysis utilizes two key DataFrames:\n\npost_data: This dataset represents movies released post-COVID. It was created by connecting and enriching data from two sources with the TMDB dataset.\npre_data: This dataset represents movies released pre-COVID, similarly created by connecting and enriching data from two sources with the TMDB dataset.\n\n\npost_data = pd.read_csv(\"PostCovid_Matching_titles_filtered_remaining_v01.csv\")\npre_data = pd.read_csv(\"PreCovid_Matching_titles_filtered_remaining_v01.csv\")\n\nsns.set(style=\"whitegrid\")"
  },
  {
    "objectID": "posts/Analysis_Visualization_v01.html#helper-function-for-plotting-distributions",
    "href": "posts/Analysis_Visualization_v01.html#helper-function-for-plotting-distributions",
    "title": "Exploring Netflix Titles Trends: A Pre- and Post-COVID Analysis",
    "section": "Helper function for plotting distributions",
    "text": "Helper function for plotting distributions\n\ndef plot_distribution(data, column, title, bins=30, xlabel=None, ylabel=\"Frequency\"):\n    plt.figure(figsize=(10, 6))\n    sns.histplot(data[column].dropna(), bins=bins, kde=True, alpha=0.7)\n    plt.title(title, fontsize=16)\n    plt.xlabel(xlabel if xlabel else column, fontsize=14)\n    plt.ylabel(ylabel, fontsize=14)\n    plt.show()"
  },
  {
    "objectID": "posts/Analysis_Visualization_v01.html#ratings-distribution",
    "href": "posts/Analysis_Visualization_v01.html#ratings-distribution",
    "title": "Exploring Netflix Titles Trends: A Pre- and Post-COVID Analysis",
    "section": "Ratings Distribution",
    "text": "Ratings Distribution\n\ndef plot_combined_distribution(data1, data2, column, label1, label2, color1, color2, title, xlabel):\n    data1_filtered = data1[(data1[column] &gt; 0) & (data1[\"vote_count\"] &gt;= 10)]\n    data2_filtered = data2[(data2[column] &gt; 0) & (data2[\"vote_count\"] &gt;= 10)]\n    \n    plt.figure(figsize=(10, 6))\n    \n    sns.kdeplot(data=data1_filtered[column], label=label1, color=color1, fill=True, alpha=0.5)\n    sns.kdeplot(data=data2_filtered[column], label=label2, color=color2, fill=True, alpha=0.5)\n    \n    plt.title(title, fontsize=16)\n    plt.xlabel(xlabel, fontsize=14)\n    plt.ylabel(\"Density\", fontsize=14)\n    plt.legend(fontsize=12)\n    plt.tight_layout()\n    plt.show()\n\nplot_combined_distribution(\n    post_data, pre_data,\n    column=\"vote_average\",\n    label1=\"Post-COVID\",\n    label2=\"Pre-COVID\",\n    color1=\"salmon\",\n    color2=\"lightgreen\",\n    title=\"Ratings Distribution: Post-COVID vs Pre-COVID\",\n    xlabel=\"Rating\"\n)\n\n\n\n\n\n\n\n\n\nObservations:\nThe density plot clearly shows that the curve for the post-COVID period is shifted further to the right along the x-axis, indicating that movie ratings post-COVID were generally higher compared to pre-COVID ratings. This shift could reflect a change in viewer preferences, with audiences potentially being more selective or generous in their ratings as a result of altered viewing habits and content consumption patterns. The concentration of ratings in the higher range post-COVID suggests an overall improvement in the quality of content or a more positive reception of movies during this period."
  },
  {
    "objectID": "posts/Analysis_Visualization_v01.html#revenue-distribution",
    "href": "posts/Analysis_Visualization_v01.html#revenue-distribution",
    "title": "Exploring Netflix Titles Trends: A Pre- and Post-COVID Analysis",
    "section": "Revenue Distribution",
    "text": "Revenue Distribution\n\n\ndef log_transform_column(data, column):\n    return np.log10(data[column])\n\ndef plot_combined_revenue_distribution(pre_data, post_data):\n    if \"revenue\" in post_data.columns:\n        post_revenue_data = post_data[post_data[\"revenue\"] &gt; 0].copy()\n        post_revenue_data[\"log_revenue\"] = log_transform_column(post_revenue_data, \"revenue\")\n    \n    if \"revenue\" in pre_data.columns:\n        pre_revenue_data = pre_data[pre_data[\"revenue\"] &gt; 0].copy()\n        pre_revenue_data[\"log_revenue\"] = log_transform_column(pre_revenue_data, \"revenue\")\n\n    plt.figure(figsize=(10, 6))\n    \n    sns.kdeplot(post_revenue_data[\"log_revenue\"], label=\"Post-COVID\", color=\"salmon\", fill=True, alpha=0.4)\n    \n    sns.kdeplot(pre_revenue_data[\"log_revenue\"], label=\"Pre-COVID\", color=\"lightgreen\", fill=True, alpha=0.4)\n    \n    plt.title(\"Pre-COVID vs Post-COVID Log-Scaled Revenue Distribution\", fontsize=16)\n    plt.xlabel(\"Log10(Revenue)\", fontsize=14)\n    plt.ylabel(\"Density\", fontsize=14)\n    plt.legend(title=\"Dataset\", fontsize=12)\n    plt.tight_layout()\n    plt.show()\n\nplot_combined_revenue_distribution(pre_data, post_data)\n\n\n\n\n\n\n\n\n\nObservations:\nThe revenue has remained relatively consistent overall, but the post-COVID period exhibits a more pronounced peak in the denser region of the distribution plot. This suggests that, while the overall revenue levels have not changed drastically, there may be a shift towards higher revenue in certain periods post-COVID. The concentration of values in the higher range could indicate stronger performance or growth in specific segments of the market, potentially driven by changes in consumer behavior or market conditions during this period."
  },
  {
    "objectID": "posts/Analysis_Visualization_v01.html#budget-distribution",
    "href": "posts/Analysis_Visualization_v01.html#budget-distribution",
    "title": "Exploring Netflix Titles Trends: A Pre- and Post-COVID Analysis",
    "section": "Budget Distribution",
    "text": "Budget Distribution\n\ndef plot_combined_budget_distribution(pre_data, post_data):\n    if \"budget\" in post_data.columns:\n        post_budget_data = post_data[post_data[\"budget\"] &gt; 0].copy()\n        post_budget_data[\"log_budget\"] = log_transform_column(post_budget_data, \"budget\")\n    \n    if \"budget\" in pre_data.columns:\n        pre_budget_data = pre_data[pre_data[\"budget\"] &gt; 0].copy()\n        pre_budget_data[\"log_budget\"] = log_transform_column(pre_budget_data, \"budget\")\n\n    plt.figure(figsize=(10, 6))\n    \n    sns.kdeplot(post_budget_data[\"log_budget\"], label=\"Post-COVID\", color=\"salmon\", fill=True, alpha = 0.5)\n    \n    sns.kdeplot(pre_budget_data[\"log_budget\"], label=\"Pre-COVID\", color=\"lightgreen\", fill=True, alpha = 0.5)\n    \n    plt.title(\"Pre-COVID vs Post-COVID Budget Distribution\", fontsize=16)\n    plt.xlabel(\"Log10(Budget)\", fontsize=14)\n    plt.ylabel(\"Density\", fontsize=14)\n    plt.legend(title=\"Dataset\", fontsize=12)\n    plt.tight_layout()\n    plt.show()\n\nplot_combined_budget_distribution(pre_data, post_data)\n\n\n\n\n\n\n\n\n\nObservations:\nThe log-scaled budget distribution reveals a noticeable shift in the post-COVID period, with an increase in both lower and higher budget films, while mid-budget films appear more prominently in the pre-COVID distribution. The densest region remains similar for both periods, but the post-COVID curve shows a higher peak, indicating a concentration of films with either lower or higher budgets, potentially reflecting changes in production strategies or market demand post-COVID. This shift could suggest a polarizing trend in film budgets, with more emphasis on either lower-cost or blockbuster films, while mid-tier productions become less common."
  },
  {
    "objectID": "posts/Analysis_Visualization_v01.html#genre-distribution",
    "href": "posts/Analysis_Visualization_v01.html#genre-distribution",
    "title": "Exploring Netflix Titles Trends: A Pre- and Post-COVID Analysis",
    "section": "Genre Distribution",
    "text": "Genre Distribution\n\ndef plot_combined_genre_distribution(pre_data, pre_genre_col, post_data, post_genre_col, title):\n    pre_genres = pre_data[pre_genre_col].str.split(\",\").explode().str.strip()\n    pre_genres = pre_genres[pre_genres.str.lower() != \"tv movie\"]\n    pre_genre_counts = pre_genres.value_counts()\n    \n    post_genres = post_data[post_genre_col].str.split(\",\").explode().str.strip()\n    post_genres = post_genres[post_genres.str.lower() != \"tv movie\"]\n    post_genre_counts = post_genres.value_counts()\n\n    combined_counts = pd.DataFrame({\n        \"Pre-COVID\": pre_genre_counts,\n        \"Post-COVID\": post_genre_counts\n    }).fillna(0)\n\n    combined_counts.sort_index(inplace=True)\n    combined_counts.plot(kind=\"bar\", figsize=(14, 10), color=[\"lightgreen\", \"salmon\"])\n    plt.title(title, fontsize=16)\n    plt.xlabel(\"Genre\", fontsize=14)\n    plt.ylabel(\"Count\", fontsize=14)\n    plt.legend(title=\"Dataset\", fontsize=12)\n    plt.tight_layout()\n    plt.show()\n\nplot_combined_genre_distribution(\n    pre_data, \n    \"genres\", \n    post_data, \n    \"genres_y\", \n    \"Pre-COVID vs Post-COVID Genre Distribution\"\n)\n\n\n\n\n\n\n\n\n\nObservations:\nThe genre distribution plot indicates an increase in the number of titles in the post-COVID period for genres such as Animation, Comedy, Family, Fantasy, and Music. Conversely, genres like Action, Crime, Documentary, Horror, and Thriller have seen a decrease in the number of titles. Adventure, Drama, and Mystery genres have remained relatively consistent across both periods, suggesting that while some genres have experienced growth or decline, others have maintained stable production levels. This could reflect shifting audience preferences or changes in content production during the post-COVID era."
  },
  {
    "objectID": "posts/Analysis_Visualization_v01.html#runtime-distribution",
    "href": "posts/Analysis_Visualization_v01.html#runtime-distribution",
    "title": "Exploring Netflix Titles Trends: A Pre- and Post-COVID Analysis",
    "section": "Runtime Distribution",
    "text": "Runtime Distribution\n\npre_data_filtered = pre_data[pre_data[\"runtime\"] &gt;= 10]\npost_data_filtered = post_data[post_data[\"runtime_x\"] &gt;= 10]\n\ndef plot_combined_runtime_distribution(pre_data, post_data, title, runtime_col_pre, runtime_col_post, xlabel=\"Runtime (minutes)\"):\n    post_runtime_data = post_data[post_data[runtime_col_post] &lt;= 600][runtime_col_post].reset_index(drop=True)\n    pre_runtime_data = pre_data[pre_data[runtime_col_pre] &lt;= 600][runtime_col_pre].reset_index(drop=True)\n    \n    combined_runtime_data = pd.DataFrame({\n        \"Post-COVID\": post_runtime_data,\n        \"Pre-COVID\": pre_runtime_data\n    })\n    \n    plt.figure(figsize=(14, 10))\n    sns.kdeplot(data=combined_runtime_data, fill=True, common_norm=False, palette=[\"lightgreen\", \"salmon\"])\n    plt.title(title, fontsize=16)\n    plt.xlabel(xlabel, fontsize=14)\n    plt.ylabel(\"Density\", fontsize=14)\n    plt.legend(labels=[\"Post-COVID\", \"Pre-COVID\"], title=\"Dataset\", fontsize=12)\n    plt.tight_layout()\n    plt.show()\n\nplot_combined_runtime_distribution(\n    pre_data_filtered, \n    post_data_filtered, \n    \"Pre-COVID vs Post-COVID Runtime Density Distribution\", \n    runtime_col_pre=\"runtime\", \n    runtime_col_post=\"runtime_x\"\n)\n\n\n\n\n\n\n\n\n\nObservations:\nBoth the Pre-COVID and Post-COVID runtime distributions appear to follow a similar pattern, peaking at around 90-100 minutes. This suggests that most titles during both periods had runtimes clustered around this range. - Density Variation: The Post-COVID dataset (red) shows a slightly higher peak density compared to the Pre-COVID dataset (green). This could imply a tighter clustering of runtimes during the Post-COVID period. - Longer Runtimes: Both distributions taper off for longer runtimes (&gt;150 minutes), indicating that titles with exceptionally long runtimes were rare in both periods. - Short Runtimes: There is a noticeable difference in the short runtime range (&lt;50 minutes). The Pre-COVID dataset shows more density for shorter titles than the Post-COVID dataset. This could indicate a reduction in shorter runtime titles after COVID. These insights suggest some changes in runtime distribution between the Pre-COVID and Post-COVID periods, with notable differences at the shorter and peak runtime ranges."
  },
  {
    "objectID": "posts/Analysis_Visualization_v01.html#production-countries-distribution",
    "href": "posts/Analysis_Visualization_v01.html#production-countries-distribution",
    "title": "Exploring Netflix Titles Trends: A Pre- and Post-COVID Analysis",
    "section": "Production Countries Distribution",
    "text": "Production Countries Distribution\n\ndef plot_combined_production_countries(pre_data, pre_country_col, post_data, post_country_col, title, country_mapping):\n    pre_countries = pre_data[pre_country_col].str.split(\",\").explode().str.strip()\n    pre_country_counts = pre_countries.value_counts()\n\n    post_countries = post_data[post_country_col].str.extractall(r\"'?([A-Z]{2})'?\\]?\")[0]\n    post_countries_mapped = post_countries.map(country_mapping)\n    \n    post_country_counts = post_countries_mapped.dropna().value_counts()\n\n    combined_counts = pd.DataFrame({\n        \"Pre-COVID\": pre_country_counts,\n        \"Post-COVID\": post_country_counts\n    }).fillna(0)\n\n    combined_counts = combined_counts.nlargest(20, [\"Pre-COVID\", \"Post-COVID\"])\n    \n    combined_counts.sort_index(inplace=True)\n    combined_counts.plot(kind=\"bar\", figsize=(14, 10), color=[\"lightgreen\", \"salmon\"])\n    plt.title(title, fontsize=16)\n    plt.xlabel(\"Production Country\", fontsize=14)\n    plt.ylabel(\"Count\", fontsize=14)\n    plt.legend(title=\"Dataset\", fontsize=12)\n    plt.tight_layout()\n    plt.show()\n\nplot_combined_production_countries(\n    pre_data, \n    \"country\", \n    post_data, \n    \"production_countries_x\", \n    \"Pre-COVID vs Post-COVID Production Countries Distribution\",\n    country_mapping\n)\n\n\n\n\n\n\n\n\n\nObservations:\nAlthough the number of titles produced post-COVID decreased for the Big-3 production countries—United States, India, and the United Kingdom—several other countries, including Japan, Nigeria, Spain, and South Korea, saw an increase in the number of titles. Even Canada, the fourth-largest production country, experienced a decline. Japan, in particular, showed a significant increase. Countries like France, Germany, Mexico, and Belgium remained relatively stable in terms of title production. Despite a notable decrease, the United States still leads in total number of titles, far surpassing other countries, with India in second place showing a slight decrease, followed by the UK, which experienced a more substantial decline."
  },
  {
    "objectID": "posts/Analysis_Visualization_v01.html#keywords-distribution",
    "href": "posts/Analysis_Visualization_v01.html#keywords-distribution",
    "title": "Exploring Netflix Titles Trends: A Pre- and Post-COVID Analysis",
    "section": "Keywords Distribution",
    "text": "Keywords Distribution\nTo analyze the distribution of keywords associated with movies in the datasets, a WordCloud visualization was employed. This technique helps highlight the most frequently occurring keywords, providing insights into thematic trends in movie production pre- and post-COVID.\n\nfrom wordcloud import WordCloud\n\ndef plot_combined_keywords_wordcloud(pre_data, post_data, title):\n    pre_keywords = pre_data[\"keywords\"].str.split(\",\").explode().str.strip().dropna()\n    pre_keywords_text = \" \".join(pre_keywords)\n    pre_keywords_text = pre_keywords_text.replace(\"based\", \"\")\n    pre_keywords_text = pre_keywords_text.replace(\"loved one\", \"\") \n    pre_keywords_text = pre_keywords_text.replace(\"angeles\", \"\")\n    pre_keywords_text = pre_keywords_text.replace(\"los\", \"\")\n    pre_keywords_text = pre_keywords_text.replace(\"york city\", \"\")\n    pre_keywords_text = pre_keywords_text.replace(\"stand\", \"stand up\")\n\n    post_keywords = post_data[\"keywords\"].str.split(\",\").explode().str.strip().dropna()\n    post_keywords_text = \" \".join(post_keywords)\n    post_keywords_text = post_keywords_text.replace(\"based\", \"\")\n    post_keywords_text = post_keywords_text.replace(\"ii\", \"\")\n    post_keywords_text = post_keywords_text.replace(\"stand\", \"stand up\")\n\n    pre_wordcloud = WordCloud(width=800, height=600, background_color=\"black\", colormap=\"YlGn\").generate(pre_keywords_text)\n    post_wordcloud = WordCloud(width=800, height=600, background_color=\"black\", colormap=\"Reds\").generate(post_keywords_text)\n\n    fig, axs = plt.subplots(1, 2, figsize=(18, 10))\n    axs[0].imshow(pre_wordcloud, interpolation=\"bilinear\")\n    axs[0].axis(\"off\")\n    axs[0].set_title(\"Pre-COVID Keywords Word Cloud\", fontsize=16)\n\n    axs[1].imshow(post_wordcloud, interpolation=\"bilinear\")\n    axs[1].axis(\"off\")\n    axs[1].set_title(\"Post-COVID Keywords Word Cloud\", fontsize=16)\n\n    fig.suptitle(title, fontsize=18)\n    plt.tight_layout()\n    plt.show()\n\nplot_combined_keywords_wordcloud(pre_data, post_data, \"Pre-COVID vs Post-COVID Keywords Word Cloud\")\n\n\n\n\n\n\n\n\n\n\nObservations:\n\nPre-COVID Keywords:\nThe WordCloud for pre-COVID movies shows a more uniform distribution of word sizes, indicating a relatively balanced emphasis across various themes.\n\n\nPost-COVID Keywords:\nThe WordCloud for post-COVID movies highlights notably larger words like “novel,” “book,” and “true story,” suggesting a significant increase in titles based on literature or real-life events.\nKeywords such as “comedy” and “murder” also appear more prominently, reflecting a potential shift in audience preferences or production focus towards these themes."
  },
  {
    "objectID": "posts/Analysis_Visualization_v01.html#comparison---post-covid-vs-pre-covid-runtime-by-genre",
    "href": "posts/Analysis_Visualization_v01.html#comparison---post-covid-vs-pre-covid-runtime-by-genre",
    "title": "Exploring Netflix Titles Trends: A Pre- and Post-COVID Analysis",
    "section": "Comparison - Post-Covid vs Pre-Covid (Runtime by Genre)",
    "text": "Comparison - Post-Covid vs Pre-Covid (Runtime by Genre)\n\npost_data['period'] = 'Post-COVID'\npre_data['period'] = 'Pre-COVID'\n\npost_data = post_data.assign(genres_y=post_data['genres_y'].str.split(\",\")).explode('genres_y')\npost_data['genres_y'] = post_data['genres_y'].str.strip().str.lower()\n\npre_data = pre_data.assign(genres=pre_data['genres'].str.split(\",\")).explode('genres')\npre_data['genres'] = pre_data['genres'].str.strip().str.lower()\n\ncombined_data = pd.concat([\n    post_data[['runtime_x', 'genres_y', 'period']].rename(columns={'runtime_x': 'runtime', 'genres_y': 'genre'}),\n    pre_data[['runtime', 'genres', 'period']].rename(columns={'genres': 'genre'})\n], ignore_index=True)\n\ncombined_data = combined_data[(combined_data['runtime'] &lt;= 300) & combined_data['genre'].notna()]\n\ncombined_data['genre'] = combined_data['genre'].str.strip()\ngenre_order = sorted(combined_data['genre'].unique())\n\nplt.figure(figsize=(16, 8))\nsns.boxplot(\n    data=combined_data,\n    x='genre',\n    y='runtime',\n    hue='period',\n    order=genre_order,\n    showfliers=False,\n    palette={'Pre-COVID': 'lightgreen', 'Post-COVID': 'salmon'}\n)\n\nplt.xticks(rotation=45, ha='right', fontsize=12)\nplt.title('Comparison of Runtime by Genre (Pre-COVID vs Post-COVID)', fontsize=16)\nplt.xlabel('Genre', fontsize=14)\nplt.ylabel('Runtime (minutes)', fontsize=14)\nplt.legend(title='Period', fontsize=12)\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nObservations:\nTo understand how movie runtimes evolved across genres during the post-COVID period compared to pre-COVID, runtime distributions were analyzed. The key findings include:\nPost-COVID runtimes for Animation and Family genres show a noticeable increase in their median values compared to pre-COVID. This could indicate a shift towards longer storytelling formats in family-oriented genres.\n\nAction and Adventure:\nRuntimes in these genres remain relatively consistent across both periods, suggesting sustained audience expectations for these genres.\n\n\nDocumentaries:\nPost-COVID, there is a wider spread in runtimes for documentaries, indicating a diverse approach to storytelling, potentially driven by increased production of short-form content and feature-length documentaries.\n\n\nDrama and Thriller:\nMinimal changes were observed in runtime distributions, implying stability in audience preferences for these genres."
  },
  {
    "objectID": "posts/Analysis_Visualization_v01.html#comparison-of-continuous-variables-with-genre",
    "href": "posts/Analysis_Visualization_v01.html#comparison-of-continuous-variables-with-genre",
    "title": "Exploring Netflix Titles Trends: A Pre- and Post-COVID Analysis",
    "section": "Comparison of continuous variables with Genre",
    "text": "Comparison of continuous variables with Genre\n\ndef plot_metric_by_genre_combined(pre_data, pre_genre_col, pre_metric_col, post_data, post_genre_col, post_metric_col, title, ylabel):\n    pre_genres_exploded = pre_data.copy()\n    pre_genres_exploded[pre_genre_col] = pre_genres_exploded[pre_genre_col].str.split(\",\").explode().str.strip()\n    pre_genres_exploded = pre_genres_exploded[\n        (pre_genres_exploded[pre_metric_col] &gt; 0) & (pre_genres_exploded[pre_genre_col].str.lower() != \"tv movie\")\n    ]\n    \n    post_genres_exploded = post_data.copy()\n    post_genres_exploded[post_genre_col] = post_genres_exploded[post_genre_col].str.split(\",\").explode().str.strip()\n    post_genres_exploded = post_genres_exploded[\n        (post_genres_exploded[post_metric_col] &gt; 0) & (post_genres_exploded[post_genre_col].str.lower() != \"tv movie\")\n    ]\n    \n    pre_grouped = pre_genres_exploded.groupby(pre_genre_col)[pre_metric_col].mean().sort_index()\n    post_grouped = post_genres_exploded.groupby(post_genre_col)[post_metric_col].mean().sort_index()\n    \n    combined_metrics = pd.DataFrame({\n        \"Pre-COVID\": pre_grouped,\n        \"Post-COVID\": post_grouped\n    }).fillna(0)\n\n    combined_metrics.plot(kind=\"bar\", figsize=(14, 10), color=[\"lightgreen\", \"salmon\"])\n    plt.title(title, fontsize=16)\n    plt.xlabel(\"Genre\", fontsize=14)\n    plt.ylabel(ylabel, fontsize=14)\n    plt.legend(title=\"Dataset\", fontsize=12)\n    plt.xticks(rotation=45, ha=\"right\")\n    plt.tight_layout()\n    plt.show()"
  },
  {
    "objectID": "posts/Analysis_Visualization_v01.html#ratings-distribution-by-genre",
    "href": "posts/Analysis_Visualization_v01.html#ratings-distribution-by-genre",
    "title": "Exploring Netflix Titles Trends: A Pre- and Post-COVID Analysis",
    "section": "Ratings distribution by Genre",
    "text": "Ratings distribution by Genre\nOverview: The box plot compares the average ratings of movies across genres for Pre-COVID and Post-COVID periods.\n\nplot_metric_by_genre_combined(\n    pre_data=pre_data,\n    pre_genre_col=\"genres\",\n    pre_metric_col=\"vote_average\",\n    post_data=post_data,\n    post_genre_col=\"genres_y\",\n    post_metric_col=\"vote_average\",\n    title=\"Average Ratings by Genre: Pre-COVID vs Post-COVID\",\n    ylabel=\"Average Rating\"\n)\n\n\n\n\n\n\n\n\n\nObservations:\n\nThe Post-COVID period shows slightly more variability in ratings for genres like Action, Adventure and Horror, possibly reflecting changing audience preferences during the pandemic.\nGenres like Animation and Family exhibit relatively consistent ratings between Pre-COVID and Post-COVID periods, indicating sustained quality and appeal."
  },
  {
    "objectID": "posts/Analysis_Visualization_v01.html#revenue-distribution-by-genre",
    "href": "posts/Analysis_Visualization_v01.html#revenue-distribution-by-genre",
    "title": "Exploring Netflix Titles Trends: A Pre- and Post-COVID Analysis",
    "section": "Revenue distribution by Genre",
    "text": "Revenue distribution by Genre\nOverview: This analysis explores the average revenue generated by movies in each genre.\n\nplot_metric_by_genre_combined(\n    pre_data=pre_data,\n    pre_genre_col=\"genres\",\n    pre_metric_col=\"revenue\",\n    post_data=post_data,\n    post_genre_col=\"genres_y\",\n    post_metric_col=\"revenue\",\n    title=\"Average Revenue by Genre: Pre-COVID vs Post-COVID\",\n    ylabel=\"Average Revenue\"\n)\n\n\n\n\n\n\n\n\n\nObservations:\n\nAction, Adventure, and Science-Fiction genres consistently dominate revenue generation, both Pre-COVID and Post-COVID. These genres likely benefit from big-budget franchises and international appeal.\nComedy, Drama and Romance genres maintain steady revenue performance across periods, likely due to their appeal as lower-budget, high-impact entertainment options.\nFamily-friendly genres like Animation and Family show resilience in revenue, possibly driven by streaming releases and demand for all-age entertainment during the pandemic."
  },
  {
    "objectID": "posts/Analysis_Visualization_v01.html#budget-distribution-by-genre",
    "href": "posts/Analysis_Visualization_v01.html#budget-distribution-by-genre",
    "title": "Exploring Netflix Titles Trends: A Pre- and Post-COVID Analysis",
    "section": "Budget distribution by Genre",
    "text": "Budget distribution by Genre\nOverview: The plot examines the average budget allocated to movies across genres.\n\nplot_metric_by_genre_combined(\n    pre_data=pre_data,\n    pre_genre_col=\"genres\",\n    pre_metric_col=\"budget\",\n    post_data=post_data,\n    post_genre_col=\"genres_y\",\n    post_metric_col=\"budget\",\n    title=\"Average Budget by Genre: Pre-COVID vs Post-COVID\",\n    ylabel=\"Average Budget\"\n)\n\n\n\n\n\n\n\n\n\nObservations:\n\nAction, Adventure, Fantasy and Sci-Fi genres have the highest budgets, which aligns with the expensive nature of visual effects and international blockbuster productions.\nDuring the Post-COVID period, certain genres like History and Mystery exhibit lower budgets, reflecting industry caution in greenlighting mid-budget productions.\nGenres such as Horror, Music and Documentary continue to be produced with lower budgets, maintaining their status as cost-effective genres.\n\n\nGenres with Consistency:\nGenres like Comedy, Drama and Romance show relatively stable performance in ratings, revenue, and budget across both periods, suggesting their steady appeal and showing little to no impact to external disruptions.\n\n\nImpact of the Pandemic:\nThe pandemic seems to have increased audience demand for escapist genres like Action, Adventure, and Fantasy, as the ratings have increased for these genres.\n\n\nBig-Budget vs. Low-Budget Trends:\nBig-budget genres like Action, Adventure, Fantasy and Science Fiction saw a reduce in revenue as well as the budget post-covid compared to pre-covid. This might be due to restrictions during covid as these genres require larger scale productions.\nLow-budget genres like Horror and Music continue to perform steadily, but the revenue seems to have gone down."
  },
  {
    "objectID": "posts/Analysis_Visualization_v01.html#conclusion",
    "href": "posts/Analysis_Visualization_v01.html#conclusion",
    "title": "Exploring Netflix Titles Trends: A Pre- and Post-COVID Analysis",
    "section": "Conclusion",
    "text": "Conclusion\nThe analysis reveals distinct shifts in the movie industry’s dynamics across ratings, revenue, and budgets during the Pre-COVID and Post-COVID periods. While some genres demonstrated resilience, others faced challenges reflective of changing audience preferences and production constraints.\n\nResilient Genres:\nFamily-friendly genres like Animation and Family, and low-budget genres like Horror and Music, maintained consistent ratings and appeal. These genres adapted well to pandemic-related shifts, leveraging streaming platforms and low production costs to sustain their performance.\n\n\nChallenges for Big-Budget Genres:\nTraditionally dominant genres such as Action, Adventure, Fantasy, and Science Fiction saw reduced budgets and revenues during the Post-COVID period. This decline likely stems from the logistical challenges and restrictions imposed on large-scale productions during the pandemic, underscoring the vulnerability of high-budget films to external disruptions.\n\n\nAudience Preference Shifts:\nThe Post-COVID period saw increased variability in ratings for genres like Action, Adventure, and Horror, reflecting the evolving tastes of audiences. Escapist genres gained popularity, driven by the demand for visually engaging, immersive entertainment during uncertain times.\n\n\nEconomic Caution:\nMid-budget genres such as Drama, Comedy, and Romance maintained steady revenue and budgets across periods. However, genres like History and Mystery experienced reduced budgets, highlighting cautious investment decisions in less commercially predictable genres.\n\n\nFinal Takeaway:\nThe pandemic has underscored the importance of adaptability in the film industry. While large-scale productions faced setbacks, genres that thrive on modest budgets and family appeal proved to be resilient. Moving forward, balancing blockbuster ambitions with economic prudence and leveraging streaming platforms for diverse genres could help the industry navigate uncertainties and maximize audience engagement.\nOverall, this analysis underscores the resilience of the movie industry in adapting to changing circumstances and audience preferences during and after the COVID-19 pandemic. The findings provide valuable insights for filmmakers, producers, and marketers to tailor strategies for future content creation and distribution."
  },
  {
    "objectID": "case.html",
    "href": "case.html",
    "title": "Case Study Analysis",
    "section": "",
    "text": "Case study: How does a bike-share navigate speedy success?\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "analysis.html",
    "href": "analysis.html",
    "title": "Visualization & Analysis",
    "section": "",
    "text": "Analysis and Visualization:\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  }
]